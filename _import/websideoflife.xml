<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.2.1" created="2011-09-17 02:44" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.1/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.1/"
>

<channel>
	<title>Web side of life</title>
	<link>http://blog.ivanjovanovic.com</link>
	<description>by Ivan Jovanovic</description>
	<pubDate>Sat, 17 Sep 2011 02:44:01 +0000</pubDate>
	<language>en</language>
	<wp:wxr_version>1.1</wp:wxr_version>
	<wp:base_site_url>http://blog.ivanjovanovic.com</wp:base_site_url>
	<wp:base_blog_url>http://blog.ivanjovanovic.com</wp:base_blog_url>

	<wp:author><wp:author_id>1</wp:author_id><wp:author_login>admin</wp:author_login><wp:author_email>ivan.jovanovic@gmail.com</wp:author_email><wp:author_display_name><![CDATA[Ivan Jovanovic]]></wp:author_display_name><wp:author_first_name><![CDATA[Ivan]]></wp:author_first_name><wp:author_last_name><![CDATA[Jovanovic]]></wp:author_last_name></wp:author>


	<generator>http://wordpress.org/?v=3.2.1</generator>

	<item>
		<title>PHP debugging with FirePHP</title>
		<link>http://blog.ivanjovanovic.com/2008/08/31/php-debugging-firephp/</link>
		<pubDate>Sun, 31 Aug 2008 22:17:49 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://ivan/?p=1</guid>
		<description></description>
		<content:encoded><![CDATA[<img class="alignleft" style="margin: 3px;" src="https://addons.mozilla.org/en-US/firefox/images/addon_icon/6149" border="0" alt="FirePHP logo" hspace="3" vspace="3" width="32" height="31" align="left" />I really like when I stumble upon a creative and useful piece of software that could improve my everyday development process. I remember when I started using FireBug it was great help in the HTML/CSS/JavaScript development and debugging.

I've just found out <strong>FirePHP</strong>, FireBug plugin that enables the developer to send log messages from PHP code to FireBug console. Quite helpfull I can say :) It consists of Firefox extension (mentioned FireBug plugin) and small PHP logger that you actually use in your code to communicate with the FireBug console. Logger comes in procedural and object-oriented fashion so if you are striving towards exceptional performance of your PHP app, or just still old-school PHP4 (R.I.P.), then man you have your choice :) Otherwise use OO PHP5 logger class. I've manage to set the demo, that goes within the PHP library, in a couple of minutes and I'm looking forward for using it in the future.

Thanks guys for great work.
<a title="Official FirePHP website" href="http://www.firephp.org/">Official FirePHP website</a>

Another cool thing that comes with the FirePHP is its integration posibilities with CakePHP, CodeIgniter, Drupal, ExpressionEngine, Kohana, PRADO, Symfony, TYPO3, <strong>Zend Framework.</strong> So there is some for anyone.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1</wp:post_id>
		<wp:post_date>2008-08-31 22:17:49</wp:post_date>
		<wp:post_date_gmt>2008-08-31 22:17:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>php-debugging-firephp</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[php]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
			<wp:meta_value><![CDATA[hello-world]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Preserving ordering with WHERE IN() clause in MySQL</title>
		<link>http://blog.ivanjovanovic.com/2008/04/01/preserving-ordering-with-where-in-clause-in-mysql/</link>
		<pubDate>Tue, 01 Apr 2008 23:42:56 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://ivan/?p=19</guid>
		<description></description>
		<content:encoded><![CDATA[Today I ran into the code that pulls from database list of elements with <code>SELECT * FROM table WHERE id IN(2,5,3,16,22,56,48)</code> where order of ids is important to be preserved after results found. When using SELECT this way you will get the results for every id but ordered by id in ascending order. I was looking around and found neat solution to make MySQL work for you to preserve the order of returned results. With ORDER BY FIELD clause like here <strong>SELECT * FROM table WHERE id IN (1,5,2,13,4) ORDER BY FIELD(id, 1,5,2,13,4)</strong> you can keep the initial ordering.

What is the catch. This way <strong>id</strong> field can not be used as indexed. Therefore, <strong>EXPLAIN SELECT * FROM table WHERE id IN (1,5,2,13,4) ORDER BY FIELD(id, 1,5,2,13,4)</strong> would give you the information that it is using <strong>filesort</strong> for results ordering which is not so nice. In general, when you have <strong>id</strong>s as the array with the ordering you need, it probably needs less resources to reorganize them in memory instead of letting MySQL doing it with <strong>filesort.</strong>

I'll take some banchmarking tests on this to see about the concrete numbers that confirm or negate my presumption.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>19</wp:post_id>
		<wp:post_date>2008-04-01 23:42:56</wp:post_date>
		<wp:post_date_gmt>2008-04-01 23:42:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>preserving-ordering-with-where-in-clause-in-mysql</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="mysql"><![CDATA[mysql]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[374041919]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>280</wp:comment_id>
			<wp:comment_author><![CDATA[Rajneesh Sharma]]></wp:comment_author>
			<wp:comment_author_email>rajsharma79@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://Website</wp:comment_author_url>
			<wp:comment_author_IP>122.177.199.155</wp:comment_author_IP>
			<wp:comment_date>2010-07-13 09:00:27</wp:comment_date>
			<wp:comment_date_gmt>2010-07-13 09:00:27</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[VERY -2 Thanks .My big problem solve]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[272498251]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>367</wp:comment_id>
			<wp:comment_author><![CDATA[Sajal]]></wp:comment_author>
			<wp:comment_author_email>sajalsoni@gmail.com</wp:comment_author_email>
			<wp:comment_author_url></wp:comment_author_url>
			<wp:comment_author_IP>59.95.246.153</wp:comment_author_IP>
			<wp:comment_date>2010-09-29 10:23:46</wp:comment_date>
			<wp:comment_date_gmt>2010-09-29 10:23:46</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Thank you, it worked like a treat!!]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[272498253]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>A year behind my back</title>
		<link>http://blog.ivanjovanovic.com/2009/09/16/a-year-behind-my-back/</link>
		<pubDate>Wed, 16 Sep 2009 23:44:58 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://ivan/?p=24</guid>
		<description></description>
		<content:encoded><![CDATA[The year is behind me since I wrote last post. A lot, mostly good, has happened.

First and most important I have finished my studies. Now I can proudly say that I'm an Electrical Engineer in the field of Automation and Control Engineering. But wait, how does Senior Web Developer position relates to that? Let that be a topic for further evaluation :) Let just say that in one moment I had to decide what interests me more.

Somewhere at the beginning of February, after almost year and a half, our cooperation with Tilllate ended. Thanks to the Maarten, Leo, Silvan, Cyprian, Jia-yong Ou, Michael, Thilo and others for being friendly, positive and smart to create great surrounding to work in. I have raised my skill to much higher level and learned a lot about programming in high-traffic, heavy-loaded environment and gained much wider view on software development than I had before. I'd like to specially thank to Tilllate Chief Software Engineer Maarten Manders for having confidence that I will do proper job with some crucial parts of Tilllate, I hope I succeeded.

<!--more-->During the March I have started looking for a new job, preferably in Switzerland. After evaluation of open positions in the market I have applied for a position of frontend engineer in <a title="Local.ch" href="http://www.local.ch">local.ch</a>. In May I went to Zurich on the interview and until the beginning of the June I was offered a job. I accepted the offer and there was just one little thing standing between me and Zurich, the procedure of getting working permission for the non-EU citizen. Hard times for me :) To cut the story (since writing this post took some time and things happened meanwhile) I got my working permission after several months. Now I'm waiting for Swiss entrance visa and until the end of October I should start on my new job in Zurich. Currently I'm looking for a temporary flat in Zurich where I could reside for couple months before I find real place to live and bring my wife to Zurich too.

As it is in real life, some stories are at the beginning, and some are at the end. While writing this post, I'm spending last days in <a title="youngculture" href="http://www.youngculture.com">youngculture</a>. It was great experience and pleasure, before all, for me to work with some of the most advanced developers in Belgrade in very high-quality working environment. I met friends for the whole life here and my two years in Belgrade will stay clearly positive experience. However, <a href="http://www.youngculture.com">youngculture</a> headquarters is based in Zurich, and people that I worked with regularly travel to Switzerland, so I presume I won't miss them too much :) I'm ready for beer or two whenever you call!!!!

The year has passed so fast that I almost did not notice it. Just heard "whuush" sound somewhere around birthday. I had no time to devote to the things I like as blogging and out-of-work internet existence, but I hope that next year will change that. I planned to reorganize this domain and blog so I could efficiently present what I'm working on and things I like. I hope as well that starting new job will give me the chance to reconsider some priorities in life and bring some fresh air as well.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>24</wp:post_id>
		<wp:post_date>2009-09-16 23:44:58</wp:post_date>
		<wp:post_date_gmt>2009-09-16 23:44:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>a-year-behind-my-back</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="personal"><![CDATA[personal]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[406213163]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Moving to Ubuntu or Windows sucks!</title>
		<link>http://blog.ivanjovanovic.com/2008/08/12/moving-to-ubuntu-or-windows-sucks/</link>
		<pubDate>Tue, 12 Aug 2008 23:46:57 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://ivan/?p=28</guid>
		<description></description>
		<content:encoded><![CDATA[<img class="alignleft" style="margin: 10px;" src="http://www.ubuntu.com/themes/ubuntu07/images/ubuntulogo.png" alt="Ubuntu logo" hspace="5" vspace="5" width="202" height="55" align="left" />While writing this post, post-intallation update on my fresh Ubuntu installation is under its way. It was long time ago I started to feel constraints of Windows as web development environment. So, very logical step was to move to something more developer friendly than user (read dummy) friendly. After testing Ubuntu with VMware player I decided to go step further and use <a title="WUBI (Ubuntu Installer for Windows)" href="http://wubi-installer.org/">WUBI (Windows Ubuntu installer)</a> to intall Ubuntu as Windows application in a folder that will act as separate filesystem for my linux installation.

Yes, I know it is not perfect solution, but since I'm running it on Toshiba laptop I was worried about drivers and related staff  and didn't want to stay even without the Vista crap (TM).
After all installation was smooth and harmless and it seems that everything works as expected for now. Setting the development environment is the next challenge I'll take. Apache, MySQL, SVN ... here I come :)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>28</wp:post_id>
		<wp:post_date>2008-08-12 23:46:57</wp:post_date>
		<wp:post_date_gmt>2008-08-12 23:46:57</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>moving-to-ubuntu-or-windows-sucks</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="general"><![CDATA[general]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>On Agile and Scrum</title>
		<link>http://blog.ivanjovanovic.com/2010/02/26/on-agile-and-scrum/</link>
		<pubDate>Fri, 26 Feb 2010 00:23:55 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.ivanjovanovic.com/?p=47</guid>
		<description></description>
		<content:encoded><![CDATA[Last months we have put lot of effort within local.ch to implement Scrum as way of our internal organization. I'll try to explain in this post my personal feeling about it.

Lets first define some rough measurements of the quality of development process and the way programmers ad to it. I like to take end product quality and price of the product as best quality abstractions since it is what counts at the end. If we take for example overdue of project shipping, cost of project implementation and work needed after project is shipped (a.k.a hunting bugs on live servers), then I can tell that all of the processes I participated in during my programming time were more or less fails. The more process was far from common sense of the programmers involved bigger fail it was. I'd like to paraphrase Jeff Sutherland from last Scrum evening in Zurich "First sh** you need to throw out of your development process is timesheet". He didn't mention the <strong>s</strong> word, but he mentioned time sheets several times :) Intentionally mentioning timesheets since one common pattern between within all the approaches that were failing for me in the past was the need of management to highly control what developers do, and from the other side restrict the space for reaction to a change. This is nothing new and it is well described in lot of resources around.

- Becoming popular around the world
- Brings new dynamics but most important is that it brings new way of looking at development.
- Have to be implemented differently in every organization

Homogenizes organizations.Gives better insight in process to every developer
- applying it is very hard since it seems to be less restrictive but requires more discipline and focus
Motivates personally]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>47</wp:post_id>
		<wp:post_date>2010-02-26 00:23:55</wp:post_date>
		<wp:post_date_gmt>2010-02-26 00:23:55</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>on-agile-and-scrum</wp:post_name>
		<wp:status>trash</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="agile"><![CDATA[agile]]></category>
		<category domain="category" nicename="agile"><![CDATA[agile]]></category>
		<category domain="post_tag" nicename="scrum"><![CDATA[scrum]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
			<wp:meta_value><![CDATA[draft]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
			<wp:meta_value><![CDATA[1314733961]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Migrating to 5.3</title>
		<link>http://blog.ivanjovanovic.com/2010/02/27/migrating-to-5-3/</link>
		<pubDate>Sat, 27 Feb 2010 14:10:16 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.ivanjovanovic.com/?p=54</guid>
		<description></description>
		<content:encoded><![CDATA[- list of resources on line
- how we did it]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>54</wp:post_id>
		<wp:post_date>2010-02-27 14:10:16</wp:post_date>
		<wp:post_date_gmt>2010-02-27 14:10:16</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>migrating-to-5-3</wp:post_name>
		<wp:status>trash</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
			<wp:meta_value><![CDATA[draft]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
			<wp:meta_value><![CDATA[1314733859]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>local.ch hack-days wrap-up.</title>
		<link>http://blog.ivanjovanovic.com/?p=55</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.ivanjovanovic.com/?p=55</guid>
		<description></description>
		<content:encoded><![CDATA[- interesting thing
- very productive
- time to pitch new ideas that might be very valuable
-our effect
- my personal thing]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>55</wp:post_id>
		<wp:post_date>2010-04-11 09:35:50</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="local-ch"><![CDATA[local.ch]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Getting started with Git</title>
		<link>http://blog.ivanjovanovic.com/2010/04/09/getting-started-with-git/</link>
		<pubDate>Fri, 09 Apr 2010 23:21:49 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.ivanjovanovic.com/?p=56</guid>
		<description></description>
		<content:encoded><![CDATA[- difference from SVN, different mindset
- where to get started
- how to get started
- overview of advanced topics]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>56</wp:post_id>
		<wp:post_date>2010-04-09 23:21:49</wp:post_date>
		<wp:post_date_gmt>2010-04-09 23:21:49</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>getting-started-with-git</wp:post_name>
		<wp:status>trash</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
			<wp:meta_value><![CDATA[draft]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
			<wp:meta_value><![CDATA[1314733872]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Webtuesday at local.ch offices</title>
		<link>http://blog.ivanjovanovic.com/2010/04/14/webtuesday-at-local-ch-offices/</link>
		<pubDate>Wed, 14 Apr 2010 22:40:25 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.ivanjovanovic.com/?p=57</guid>
		<description></description>
		<content:encoded><![CDATA[Every first Tuesday of a month, Zürich oriented web community gather for an evening of tech talks and some beer for, so called, <a title="Webtuesday web site" href="http://webtuesday.ch/">webtuesday</a>. Yesterday, we had pleasure to host event at  <a title="Local.ch web site" href="http://local.ch/">local.ch</a> for the first time as unofficial opening for the community after movement to <a title="Local.ch address" href="http://yellow.local.ch/en/d/Zuerich/8001/Internet/local.ch-ag-jXdlhL7d_gnuD1d-TjoTTw?what=local.ch">new offices</a>. As Harry <a title="Harry's twitter status" href="http://twitter.com/hfuecks/status/12115799946">tweeted</a> already during the event, it was pretty packed. I was personally happy to see lot of people coming since this was only my second webtuesday since I started working for local.ch 6 months ago.

[caption id="" align="alignleft" width="336" caption="Packed webtuesday @localch offices (by Harry Fuecks)"]<a href="http://twitter.com/hfuecks/status/12115799946"><img class="  " title="Packed webtuestad @localch offices" src="http://a.yfrog.com/img707/5599/4lmg.jpg" alt="Packed Webtuesday @localch offices" width="336" height="252" /></a>[/caption]

This time <a title="Patrice's blog" href="http://weblog.patrice.ch/">Patrice</a> and Chris from <a title="Memonic" href="http://memonic.com">memonic.com</a> gave great talk on the current state of the architecture and tools that are behind their startup. Since both of them worked for local.ch before (Patrice as Lead of Frontend Development, Chris as backend Java developer)  it was interesting to see how much they kept and where they improved along the way.

Interesting point was the choice of the language for their startup. At local.ch, we are kind of separated on frontend and backend development, before all, by the languages we use. Shortly, PHP on the frontend and Java in backend with HTTP communication in between, XML result got from backend parsed by XSL to produce HTML. At Memonic they decided to bring that together and make gap between backend and frontend development smaller by choosing Python as common language. Having experience with the Scrum and challenges which this kind of separation between frontend and backend carries, I see this as reasonable decision. I was surprised to hear that none of them had professional experience with Python before founding Memonic.

Their architecture is highly web service oriented. The way Patrice conceptually sees the architecture can be paraphrased like this:
<blockquote>"I see web services in our architecture as classes are used traditionally, or maybe better, as components of the traditional framework"</blockquote>
end of lousy paraphrase :). So, if we take Zend Framework for example: imagine that instead of having Zend_Auth, Zend_Session, Zend_Log, Zend_Mail ... and sending messages to their objects, you have web services that expose interfaces over HTTP. On the <a title="Memonic blog post" href="http://blog.memonic.com/archive/2010/04/14/webtuesday-memonic-architecture.html">slides Patrice provided</a> can be seen in smaller detail way their architecture is broken into smallest possible web services that communicate among each other. Web services are based on <a title="wsgiservice on GitHub" href="http://github.com/pneff/wsgiservice">wsgiservice</a> (Python WSGI framework to create REST web service) library that is open sourced by Patrice. One thing I was interested is what is the performance loss in HTTP communication overhead between components. In current state of the load they do not see it as problem and they see using HTTP features as e.g. caching more valuable than performance loss introduced.

Here are some links, if you are more interested to find out about <a title="Local.ch - official website" href="http://www.local.ch/en/s/aboutus/facts_and_figures">local.ch</a>, <a title="Webtuesday website" href="http://webtuesday.ch">webtuesday</a> or <a title="Keep the essential, memonic.com website" href="http://memonic.com/">memonic.com</a>.]]></content:encoded>
		<excerpt:encoded><![CDATA[Every first Tuesday of a month, Zürich oriented web community gather for an evening of tech talks and some beer for, so called, webtuesday. Yesterday, we had pleasure to host event at  local.ch for the first time as unofficial opening for the community after movement to new offices. As Harry tweeted already during the event, it was pretty packed. I was personally happy to see lot of people coming since this was only my second webtuesday since I started working for local.ch 6 months ago. This time Patrice and Chris from memonic.com gave great talk on the current state of the architecture and tools that are behind their startup]]></excerpt:encoded>
		<wp:post_id>57</wp:post_id>
		<wp:post_date>2010-04-14 22:40:25</wp:post_date>
		<wp:post_date_gmt>2010-04-14 22:40:25</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>webtuesday-at-local-ch-offices</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="community"><![CDATA[community]]></category>
		<category domain="category" nicename="community"><![CDATA[community]]></category>
		<category domain="post_tag" nicename="local-ch"><![CDATA[local.ch]]></category>
		<category domain="post_tag" nicename="webtuesday"><![CDATA[webtuesday]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[local.ch, webtuesday, memonic, webservice, php, python, zurich, web, community]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_description</wp:meta_key>
			<wp:meta_value><![CDATA[Webtuesday on 13th Aptil 2010 held in local.ch offices. Memonic.com co-founders gave talk about architecture and tools behind their startup.]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_title</wp:meta_key>
			<wp:meta_value><![CDATA[webtuestay community meeting at local.ch, memonic tech talk]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Getting started with PHP - Hello mind approach</title>
		<link>http://blog.ivanjovanovic.com/2010/04/27/getting-started-with-php-hello-mind-approach/</link>
		<pubDate>Tue, 27 Apr 2010 07:44:06 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.ivanjovanovic.com/?p=62</guid>
		<description></description>
		<content:encoded><![CDATA[These days I was asked by my relative about how to start with PHP. Although he is experienced programmer and already used PHP long time before, somewhere when PHP 4 was actual he liked to know my opinion on it since I'm in it for a long time already.
-This is not "Hello World" approach, it is rather "Hello mind" view on this topic.
- PHP is build around problems people had implementing web applications, so learn concepts of the web. Understand share nothing architecture and why is it important. Don't be upset with the ugliness of the tool, it is damn useful, and it was never ment to be pretty probably.
- PHP is not 360 solution for the web applications, neither Zend Framework is. It is rather place where Java mindset tries to meet PHP.
He asked me about good book on PHP. I didn't know what to say, I hardly ever had PHP book, I mean, it is all around you, PHP has I believe the most to offer from resources o nthe web. You have to do some cherry picking but at the end it is all free, so if you don't like it, improve it.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>62</wp:post_id>
		<wp:post_date>2010-04-27 07:44:06</wp:post_date>
		<wp:post_date_gmt>2010-04-27 07:44:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>getting-started-with-php-hello-mind-approach</wp:post_name>
		<wp:status>trash</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
			<wp:meta_value><![CDATA[draft]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
			<wp:meta_value><![CDATA[1314733879]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Going to DPC conference</title>
		<link>http://blog.ivanjovanovic.com/?p=79</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.ivanjovanovic.com/?p=79</guid>
		<description></description>
		<content:encoded><![CDATA[- going to DPC conference in Amsterdam
- My first conference
- I'm interested in tutorial session on writing C/C++ extensions for PHP
- Looking forward to some fun and meeting new people
- My memonic public set on Amsterdam]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>79</wp:post_id>
		<wp:post_date>2010-06-07 16:14:26</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Then I saw the tests, now I&#039;m a believer.</title>
		<link>http://blog.ivanjovanovic.com/2010/11/24/then-i-saw-the-tests-now-im-a-believer/</link>
		<pubDate>Wed, 24 Nov 2010 00:41:56 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.ivanjovanovic.com/?p=85</guid>
		<description></description>
		<content:encoded><![CDATA[These days I was working on a small feature that had to be added to an application here at <a title="Local.ch AG, Official Swiss Phonebook" href="http://local.ch/">local.ch</a>. The application was originally written by some other developers and it was first time that I looked at that code. Everything would be OK, and I would not write this post at all if at one moment I didn't feel strong need to rewrite the application completely. To be clear, it is not kind of need that draws motivation in "Not my code, I'm smarter than others." source of frustration. Point is that this code really needs refactoring in order to grow in future and remain maintainable while adding new features to it. But that is by itself not a problem, what code doesn't need refactoring, especially your own!  And if you have no constant need to refactor things that could mean you didn't learn anything since last time you saw that code.

The problem becomes obvious and bit more acute when you figure out that, despite the fact that we try to keep our micro applications pretty simple with least possible code and logic, you don't have all clues about how that piece of software works. Then you become aware  that amount of time needed to get into all the bits of included functionalities is way bigger than just  refactoring the code. Therefore, you lose peak of your motivation since you instantly visualize all the non-engineering time you need to invest in gathering information instead of just doing it. But of course, when just doing it, at the end it should have the same function as before, I guess. So without some proof that you didn't degrade functionality, just do it approach would be even worse than not doing it.

And where would you expect to find up to date documentation in such case? Browsing the Wiki ... not ;)

While letting you think a bit, I'd tell you that at <a href="http://local.ch">local.ch</a> we are passionate about agile practices and testing in particular. We always try to cover our code with reasonable amount of coverage and quality of tests. Since I joined, I accepted this as a fact and acted in that sense, but was not believer in testing in the religious way. Not until I imagined ideal world where I would go to test cases and could understand all functionalities implemented in the code that these tests cover. And in more ideal world, I would be able to drop the code, leave the tests and write new code which would be proved as correct in the moment all tests get green again. But not when tests are written in the way to reflect bad implementation choices in the code and not thoroughly though through. Then you have to throw the tests as well and you are back at the start point.

I could imagine that in mentioned idealized model of the world you could continuously improve quality of the code, reduce price of its maintenance, add new features and experiment with different ways of implementing the same thing while exploring new approaches to solving old problems. And all that while being sure that you didn't break function of software that might in a case pay your salary at the end of the month.

Yes, and "The Beatles" are now in iTunes. Lucky us, the whole world has changed.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>85</wp:post_id>
		<wp:post_date>2010-11-24 00:41:56</wp:post_date>
		<wp:post_date_gmt>2010-11-24 00:41:56</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>then-i-saw-the-tests-now-im-a-believer</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="agile"><![CDATA[agile]]></category>
		<category domain="post_tag" nicename="bdd"><![CDATA[BDD]]></category>
		<category domain="post_tag" nicename="code-quality"><![CDATA[code quality]]></category>
		<category domain="category" nicename="engineering"><![CDATA[engineering]]></category>
		<category domain="post_tag" nicename="engineering"><![CDATA[engineering]]></category>
		<category domain="post_tag" nicename="tdd"><![CDATA[TDD]]></category>
		<category domain="post_tag" nicename="testing"><![CDATA[testing]]></category>
		<category domain="category" nicename="testing"><![CDATA[testing]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>TextMate for PHP development</title>
		<link>http://blog.ivanjovanovic.com/2010/12/29/textmate-for-php-development/</link>
		<pubDate>Wed, 29 Dec 2010 00:08:18 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.ivanjovanovic.com/?p=97</guid>
		<description></description>
		<content:encoded><![CDATA[If you want to improve your productivity and programming skills in general, getting to know better the tools you use every day is one of  the important things to invest your time in. Keyboard shortcuts of your favorite editor are especially important and using them in your daily routine will save you lot of hand movements towards mouse, lot of context switching and will help you focus on what is important.

I use TextMate for everyday PHP development and I find it excellent. There are some features that more complex IDEs provide out of the box, but after you get used to work with TextMate and learn how to be productive you can hardly find better option. Keyboard shortcuts are one of its good parts and key to boosting your productivity.

<!--more-->

There are some general purpose shortcuts that will work on any type of document, therefore on PHP files as well.

Regarding the notation: <strong>A + B</strong> means press in same time, <strong>A -&gt; B</strong> means type A and then after it press B
<ul>
	<li><strong>mate filename1 filename2</strong> - you can always start TextMate from command line and give list of files/folders to open</li>
	<li><strong>open projectname.tmproj</strong> - if you saved your TextMate project to a file, which is good way to preserve custom project configuration, you can open it from shell with standard OSX <em>open</em> command</li>
	<li><strong>Cmd + T</strong> - search for file in the project</li>
	<li><strong>Cmd + Shift + F</strong> - search for a given string through all files in the project</li>
	<li><strong>Cmd + F</strong> - regular search for a given string in current file</li>
	<li><strong>Ctrl + S</strong> - faster way to search for strings in current file. Notice the input text box at the bottom of you TextMate window. Hit Esc to get out of fast search mode.</li>
	<li><strong>Cmd + Shift + T</strong> - search for a function/class name in current file</li>
	<li><strong>Cmd + Ctrl + R</strong> - see where the current file is in the project folder tree.</li>
	<li><strong>Ctrl + W</strong> - select whole word under cursor</li>
	<li><strong>Ctrl + Shift + A</strong> - gives you the list of SVN commands to execute on current file or folder if it is selected in project file tree.</li>
	<li><strong>Ctrl + Shift + G</strong> - gives you the list of Git commands to execute on current file or folder if it is selected in project file tree.</li>
	<li><strong>Alt + Mouse Selection</strong> - selecting in vertical blocks has never been easier, and editing afterwards as well :)</li>
	<li>Set of shortcuts for doing fast search and replace
<ul>
	<li><strong>Cmd + E</strong> - set keyword to be replaced</li>
	<li><strong>Shift + Cmd + E</strong> - set replacement word</li>
	<li><strong>Ctrl + Cmd + F</strong> - replace in current file</li>
	<li><strong>Ctrl + Shift + Cmd + F</strong> - replace in selection only</li>
</ul>
</li>
</ul>
Great thing about TextMate is its possibility to be customized for specific needs by adding so called <a title="Textmate bundles" href="http://manual.macromates.com/en/bundles#bundles">bundles</a>. TextMate comes with <a title="Default PHP Bundle" href="https://github.com/textmate/php.tmbundle">default PHP bundle</a> embedded. You can see all the functionalities it provides in <em>TextMate -&gt; Bundles -&gt; Bundle Editor -&gt; Show Bundle Editor</em> or <strong>Ctrl + Alt + Cmd + B</strong> as shortcut. Here are some interesting ones from this bundle or useful for development in general
<ul>
	<li><strong>Esc</strong> - hitting escape after you typed couple of letters  will do code completion from the symbols defined in current editing file. Will work as well for native PHP functions. Just start typing <em>mk</em> and hit <em>escape</em> then and it will complete it as <em>mktime</em> :)</li>
	<li><strong>Alt + Esc</strong> - this will give you list of possible completions. After selecting one of them, you'll get full function signature injected in the document.</li>
	<li><strong>Ctrl + H</strong> - will give you PHP documentation related to the selected word in your current editing document.</li>
	<li><strong>Ctrl + Shift + V</strong> - will check your file for syntax validity.</li>
	<li><strong>Shift + Cmd + D</strong> - will jump to file that is included in the current PHP file.</li>
	<li><strong>doc -&gt; Tab</strong> - if you type word <em>doc</em> above class/method/function and hit Tab after it, you will get documentation block for the related entity.</li>
	<li><strong>Cmd + Shift + R</strong> - will run your file with current system PHP executable. This is very nice when you just test something and want to see the output, but don't want to get out to shell and command line.</li>
	<li><strong>Alt + F1</strong> - documentation about function signature in the form of tooltip. If you forgot weather $haystack or $needle goes first as the param in the array function this is easy way not to search through extensive documentation.</li>
	<li><strong>Shift + Ctrl + T</strong> - if you like to place lot of <em>TODO</em>, <em>FIXME</em> or <em>CHANGED</em> meta information in your comments for later addressing, this will help you find them quickly and navigate through them easily.</li>
</ul>
Beside these shortcuts there are a lot of snippets triggered by hitting Tab after typing its abbreviation. For example <strong>doc_f -&gt; Tab</strong> will create new function together with doc block. You can see list of all of them in the mentioned bundle editor in the section for PHP bundle. It is pretty easy as well to create your own specific snippets.

Many more general or specific shortcuts can be found online e.g. as printable <a href="http://www.g-design.net/textmate.pdf">cheat</a> <a href="http://www.grayskies.net/TMcheatsheet.pdf">sheets</a>. Or in TextMate <a href="http://manual.macromates.com/en/">manual</a>. The best way to adopt them is to take them one by one and pay attention to use it regularly, as soon as it is at the back of the brain start with new one until you become TextMate productivity wizard.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>97</wp:post_id>
		<wp:post_date>2010-12-29 00:08:18</wp:post_date>
		<wp:post_date_gmt>2010-12-29 00:08:18</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>textmate-for-php-development</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="php"><![CDATA[php]]></category>
		<category domain="category" nicename="tools"><![CDATA[tools]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[textmate, keyboard, shortcut, php, development, tool]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[374041922]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>862</wp:comment_id>
			<wp:comment_author><![CDATA[Bruno]]></wp:comment_author>
			<wp:comment_author_email>bruno@pollenizer.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.pollenizer.com/</wp:comment_author_url>
			<wp:comment_author_IP>203.45.118.82</wp:comment_author_IP>
			<wp:comment_date>2011-01-07 07:06:40</wp:comment_date>
			<wp:comment_date_gmt>2011-01-07 07:06:40</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[A top addition for the CMD+T is <a href="http://peepcode.com/products/peepopen" rel="nofollow">PeepOpen</a> ... improves it enormously. 

However TextMate sucks at dealing with large'ish files. I might be moving to VIM in the near future after much pain with TextMate :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[272498258]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>864</wp:comment_id>
			<wp:comment_author><![CDATA[Ivan Jovanovic]]></wp:comment_author>
			<wp:comment_author_email>ivan.jovanovic@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.ivanjovanovic.com</wp:comment_author_url>
			<wp:comment_author_IP>77.109.141.114</wp:comment_author_IP>
			<wp:comment_date>2011-01-07 08:43:34</wp:comment_date>
			<wp:comment_date_gmt>2011-01-07 08:43:34</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Bruno, nice to hear from you!

Thanks for the PeepOpen link, Cmd + T needed some love for sure. Fortunately I don't deal with large files, except sometimes. In that cases I use exactly VIM :) 
I can imagine that VIM can provide even better experience, and it is available in lot more platforms than TM which is great advantage of it. Would be interesting to see how much effort is needed to get to the same level of productivity since it is more complicated to learn its patterns.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>862</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[272498258]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[272498259]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Getting around first steps with Git</title>
		<link>http://blog.ivanjovanovic.com/2011/03/25/getting-around-first-steps-with-git/</link>
		<pubDate>Fri, 25 Mar 2011 15:35:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.ivanjovanovic.com/?p=112</guid>
		<description></description>
		<content:encoded><![CDATA[So, your pain threshold limits are exhausted by everyday use of your current version control software (SVN, CVS anyone?). You are looking for another solution to version control problems and you start exploring <a href="http://git-scm.com/">Git</a>. You heard that it is really cool, but now you're getting hands on to figure out how cool it really is.

For start, you should know that <a title="Git basics" href="http://progit.org/book/ch1-3.html">Git is different</a>. Your current mindset will drive you into using it the same way you used SVN, but very soon you'll find out that if you don't start working on your mindset, using Git can become more a problem than a solution. Fortunately, <a href="http://progit.org/book/">Pro Git book</a> is available online for free and I highly recommend going through it with understanding.<!--more-->

If there is a list of things to understand and clarify at start that I would recommend:
<ul>
	<li><a href="http://progit.org/book/ch2-0.html">Git basics</a></li>
	<li>track -&gt; edit -&gt; stage -&gt; commit -&gt; push file lifecycle</li>
	<li><a href="http://stackoverflow.com/questions/292357/whats-the-difference-between-git-pull-and-git-fetch">fetching vs pulling</a> changes from remote origin</li>
	<li>every Git repository of a project <a href="http://progit.org/book/ch3-5.html">represents part of one common history</a>, your local branches are just one part of it, remote origin as well and repositories of your colleagues too.</li>
	<li><a href="http://progit.org/book/ch3-0.html">working with branches</a> properly and efficiently</li>
	<li><a href="http://progit.org/book/ch7-1.html">managing configuration</a> of your local repository and global Git configuration</li>
</ul>
I'm new to Git and I had some basic questions to answer for myself, and afterwards I saw others asking again the same things. If I would take a couple of them to answer that would be these.
<h3>Git autocompletion</h3>
Great tool to explore and learn Git commands during your everyday work. It is easy to set up and invaluable to have it.

First download the git-completion.bash file

[code lang="bash"]cd # to go to your home folder
curl https://github.com/git/git/raw/master/contrib/completion/git-completion.bash -O[/code]

and then add this line to your ~/.bash_profile or however you name your profile file

[code lang="bash"]source ~/git-completion.bash[/code]
<h3>Checking out remote branch</h3>
Someone pushed new branch to remote repository and you are having tough time to start working on it. Use

[code lang="bash"]git fetch[/code]

this will fetch all remote branches and put them in local repository

[code lang="bash"]git checkout -b local-branch-name origin/remote-branch-name[/code]

will check out branch and set tracking between local and remote branch properly for you.
<h3>Pushing and pulling only to and from current branch</h3>
After you have finished your work on a branch, you want to push your changes. But git push command by default pushes changes from all branches if no other parameters are given. It can be configured in general to push only current branch with

[code lang="bash"]git config push.default current[/code]

Regarding puling is a bit more complicated, since this is the option to be set for each branch. Probably it can be generalized. For example, you can have  a remote branch called funky-branch which is on the origin remote repository and local branch with same name funky-branch. Then we can pull only its changes if we set following config options for this local branch

[code lang="bash"]git config branch.funky-branch.remote origin
git config branch.funky-branch.merge refs/heads/funky-branch[/code]

now git pull works without pulling other branches along the way.

There are of course numerous more questions to answer regarding Git, but when you touch the ground with your own feet, you'll get to answer them really quickly since it has a <a href="http://git-scm.com/documentation">great documentation</a> and an active community.

Git is extremely powerful and incredibly fast tool which enables us to make some really complicated development scenarios easy to manage. On the other hand it can often look like a kind of magic since there is a bit more to understand of it comparing to centralized version control solutions. One thing that is obvious after some weeks of everyday usage of Git is that it fits really good to the way my mind works during development. If you still have doubts, give it a try, it might even help :)
<h3>Making current git branch visible in your command prompt</h3>
Git is known for powerful branching possibilities. Although, it is hard to shuffle between branches and to always know in which you are currently. There is simple solution to this. You can add name of current branch to your command prompt by adding this to your shell profile script.

[code lang="bash"]
# Set up git branch information in command prompt
parse_git_branch() {
git branch 2&gt; /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/[\1]/'
}
# Example of use of the function in command prompt $(parse_git_branch)
PS1=&quot;\w\$(parse_git_branch) $ &quot;
[/code]

After resourcing your shell profile you'll see current checkout branch name in command prompt whenever you enter git workspace folder.
<h3>Selecting only part of a change for commit</h3>
Usually changes we make are not perfectly clean, or currently changed files contain at least two unrelated changes. Git provides the way to select only a part of all the changes and stage them for commit. It is done by using:

[code lang="bash"]git app -p[/code]

Then you would have a change to decide on every group of lines weather to include it or not, you can even split it to parts so you can select more granular way ...
<h3>Cleaning up repository with garbage collection</h3>
Git doesn't do garbage collection on the repositories by default which has couple of advantages. Commands don't lose time to prune objects all the time and you have kind of history to refer to locally. But, over time it gets slower, which can be fixed with activating garbage collection.

[code language="javascript"]
git gc --prune
// or check `man git-gc` for more information about git garbage collection
[/code]
&nbsp;
<h3>Getting up to more speed</h3>
<a title="Six Revisions Git resources" href="http://sixrevisions.com/resources/git-tutorials-beginners/">Here</a> you can find extensive list of resources for learning Git with selection of top 10 sites that provide the best resources online.

After you have finished the basics you can proceed with more advanced topics. This <a href="http://nuclearsquid.com/writings/git-tricks-tips-workflows.html">great post from Markus Prinz </a> can help you with optimizing Git for more advanced and more personalized workflows.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>112</wp:post_id>
		<wp:post_date>2011-03-25 15:35:00</wp:post_date>
		<wp:post_date_gmt>2011-03-25 15:35:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>getting-around-first-steps-with-git</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="git"><![CDATA[git]]></category>
		<category domain="category" nicename="tools"><![CDATA[tools]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[377119973]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Am I stupid, or is that = this stupid?</title>
		<link>http://blog.ivanjovanovic.com/2011/04/27/am-i-stupid-or-is-that-this-stupid/</link>
		<pubDate>Wed, 27 Apr 2011 22:26:06 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.ivanjovanovic.com/?p=147</guid>
		<description></description>
		<content:encoded><![CDATA[JavaScript development has got really much momentum and its popularity is peaking. In the moment of design it was probably never foreseen as such success. Maybe that is why we have to satisfy to using only its <a title="No affiliates ;)" href="http://www.amazon.com/exec/obidos/ASIN/0596517742/">"Good Parts"</a>. There are lot of compromises with it, in order to make programming it a success overall. One thing that I always found weird is usage of <strong>that = this</strong> concept. JavaScript guru <a title="The guy that is bravely hiding Chuck Norris on the picture" href="http://www.crockford.com/">Douglas Crockford</a> <a href="http://javascript.crockford.com/private.html">explains on his website</a> this concept of preserving connection of method with parent object regardless of the context of invocation. In practical usage I saw this pattern used for essentially the same reason but on other places. Consider this example (code purpose and quality in general do not matter that much)

[code lang="javascript" highlight="4"]
// Returns array of positions of current players on the field
tofu.Table.prototype.getPlayerPositions = function() {
    var positions = [];
    var that = this
    $.each(this.rods,
    function(i, rod) {
        var left = that.getRodDistance(i)
        // produce positions for all players
        for (var j = 0; j &amp; lt; rod.men_number; j++) {
            var position = {
                left: left,
                top: j * rod.men_distance + rod.position
            }
            positions.push(position);
        }
    });
    return positions;
}
[/code]

The main point here is that we try to preserve reference to parent object with <strong>var that = this</strong> because $.each(this.rods, ... ) will overwrite reference to local variable <strong>this</strong>. In that case we access closure reference <strong>that</strong> to refer to our original object.

And there is a problem, I keep seeing this pattern all around. As I understand programming, proper naming of "things" is very important. And one that calls everything around in the terms of <strong>this</strong> and <strong>that</strong> might not be considered much smart ;) Can't we have a name for <strong>that</strong> reference. Considering same example with small change in code I think it looks more natural than before and more readable and self explainable
[code lang="javascript" highlight="4"]
// Returns array of positions of current players on the field
tofu.Table.prototype.getPlayerPositions = function() {
    var positions = [];
    var table = this
    $.each(this.rods,
    function(i, rod) {
        var left = table.getRodDistance(i)
        // produce positions for all players
        for (var j = 0; j &amp; lt; rod.men_number; j++) {
            var position = {
                left: left,
                top: j * rod.men_distance + rod.position
            }
            positions.push(position);
        }
    });
    return positions;
}
[/code] ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>147</wp:post_id>
		<wp:post_date>2011-04-27 22:26:06</wp:post_date>
		<wp:post_date_gmt>2011-04-27 22:26:06</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>am-i-stupid-or-is-that-this-stupid</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="javascript"><![CDATA[javascript]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Random Hacks of Kindness - building a better world commit by commit</title>
		<link>http://blog.ivanjovanovic.com/2011/06/06/random-hacks-of-kindness-building-better-world-commit-by-commit/</link>
		<pubDate>Mon, 06 Jun 2011 22:40:50 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.ivanjovanovic.com/?p=153</guid>
		<description></description>
		<content:encoded><![CDATA[It was long time ago since I realized that every discussions about this or that technology falls into water without putting it in the context of the real-world problem. And, unfortunately, real world today doesn't lack problems. What it lacks are people of good will to solve them, or at least good people lack organization and coordination in order to efficiently solve these problems.
<a href="http://www.rhok.org/about">Random Hacks of Kindness</a> project was started with idea to address this problem.
<blockquote>RHoK works by bringing together experts in development and volunteers with a broad set of skills in software development and design to solve problems defined by NGOs and other institutions which work in the area of disaster management.</blockquote>
Last weekend RHoK happend for the first time in Switzerland. <a href="http://wernerkrippendorf.blogspot.com/">Frank</a>, driven by his experience from RHoK #2 in Berlin, organized great event in Basel and gathered around 20 of us to attack some of the <a href="http://www.rhok.org/problems">RHoK problem definitions</a> we found interesting. On the following video you can see presentations of all the teams, their problem definitions and explanations of solutions.

http://www.youtube.com/watch?v=3y-afSoX_YA

I worked with <a href="http://www.rhok.org/users/mullinger">Max</a>, <a href="http://www.rhok.org/users/philipp">Phillip</a>, <a href="http://www.rhok.org/users/delixfe">Felix</a>, <a href="http://www.rhok.org/users/tomtomaso">Thomas</a> and Chad from <a href="http://www.secondmuse.com">SecondMuse</a> on the <a href="http://www.rhok.org/problems/hazards-map-field-use">problem defined by Caritas Switzerland</a>. Overall idea was to gather different sources of scientific GIS data for different global community risk related information like percentage of child hunger per country or intensity of cyclones in coastal areas and to present this information in usable way on one map with some tools to examine data more deep. Technically, the most difficult part of the problem is the fact that, as far I could understand, GIS area lacks standardization of data exchange file formats, and getting head around this domain in 2 days is really hard. We did not finish much on the practical side, but we examined the problem from technical side and came to deeper understanding of the problem domain and some ideas how it can be solved properly in future. One visible thing we made is <a href="http://blog.ivanjovanovic.com/labs/chm/">half-working prototype</a> of Google Map with two custom tile layers, more like proof of concept for our idea.

[caption id="" align="aligncenter" width="576" caption="Me, explaining our solution"]<img class=" " title="Me, explaining our solution" src="http://farm3.static.flickr.com/2559/5801680178_e18be382ff_z.jpg" alt="" width="576" height="383" />[/caption]

<a href="http://oleg.utou.ch/">Oleg</a>, who worked on the Person finder problem, gave <a title="Olegs overview of RHoK Basel" href="http://ol.posterous.com/random-hacks-of-kindness-basel">great overview of the whole RHoK Basel event on his blog</a>.

Beside great time, meeting great people and working on challenging problem I found that participating to this event additionally boosted my motivation to get deeper into non-technical side of problems of communities around the world. Also I became more aware how important is to motivate people to put some effort into solving this kind of problems and how easy is to help if proper environment is set and some basic organization is provided.

On the line of organization, I liked that we could give the input about how we could improve the event organization for future. I found couple of possible optimizations of the process which might help me achieve better results next time:
<ul>
	<li>As software developer I'm sensitive to quality of requirements. Problem definitions, as given today, are definitely not the best to work with. If we could <strong>involve engineers in the problem definition process</strong> before problem definition comes for implementation it might help to get more done during the short and intense 2 days of hacking. And even more important maybe is to <strong>have the problem owner present in place for all time during the event</strong>. This not only helps team but even more helps them to understand the problem better for future.</li>
	<li>The way teams are formed is not the most efficient. Although, getting together with group of completely unfamiliar people is personally great and can lead to lot of innovation, it makes continuity a bit harder. Working with people you know and trust is from other side more efficient but can lead to not that innovative approaches. If these could be combined in a way I'm sure we could achieve better results and insure better continuity which is essential for finishing the project to some usable state. Therefore I'll try to make effort to<strong> form a team for next RHoK and try to stick to a problem until it is finished at least in the basic version</strong>.</li>
	<li><strong>Event should be promoted to the broader audience</strong> and involve more different professions like <strong>designers, usability experts, product owners, scrum masters</strong> and other involved in agile software development which is I believe the most appropriate for this way of attacking problems.</li>
	<li>In future whole RHoK idea should be expanded to <strong>involve problem areas other than disaster management</strong>. I would personally be the most interested in problems related to online education of countries in development, and others certainly have their own preferences as well. This way we might gather much bigger community around it.</li>
</ul>
[caption id="" align="aligncenter" width="576" caption="RHoK #3 Basel participants"]<img class="  " title="RHoK #3 Basel participants" src="http://farm4.static.flickr.com/3475/5801145819_ee4b6a5841_z.jpg" alt="" width="576" height="383" />[/caption]

And of course, next time consider to join]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>153</wp:post_id>
		<wp:post_date>2011-06-06 22:40:50</wp:post_date>
		<wp:post_date_gmt>2011-06-06 22:40:50</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>random-hacks-of-kindness-building-better-world-commit-by-commit</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="community"><![CDATA[community]]></category>
		<category domain="category" nicename="engineering"><![CDATA[engineering]]></category>
		<category domain="category" nicename="rhok"><![CDATA[rhok]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_oembed_90acdb17c4a0ac08fdc24b0ec9dea67d</wp:meta_key>
			<wp:meta_value><![CDATA[<object width="500" height="400"><param name="movie" value="http://www.youtube.com/v/3y-afSoX_YA?version=3"></param><param name="allowFullScreen" value="true"></param><param name="allowscriptaccess" value="always"></param><embed src="http://www.youtube.com/v/3y-afSoX_YA?version=3" type="application/x-shockwave-flash" width="500" height="400" allowscriptaccess="always" allowfullscreen="true"></embed></object>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[374041929]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1008</wp:comment_id>
			<wp:comment_author><![CDATA[Ivan Jovanovic]]></wp:comment_author>
			<wp:comment_author_email>ivan.jovanovic@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.ivanjovanovic.com</wp:comment_author_url>
			<wp:comment_author_IP>178.195.81.104</wp:comment_author_IP>
			<wp:comment_date>2011-06-13 22:39:03</wp:comment_date>
			<wp:comment_date_gmt>2011-06-13 22:39:03</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hey Oleg. Thanks for nice words and for the recap on your blog as well. We need to spread the word to make this even better.
Open Data might be really good platform to solve this problem and might lead to some needed continuity. I'll take a look to push the idea there. 

And, welcome to Switzerland. I'm happy to see your integration running smoothly from the first day. I passed that couple of years before. 
After some time you just get used to it ;)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1006</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1308004743.42";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:70:{s:15:"comment_post_ID";s:3:"153";s:14:"comment_author";s:14:"Ivan Jovanovic";s:20:"comment_author_email";s:24:"ivan.jovanovic@gmail.com";s:18:"comment_author_url";s:28:"http://www.ivanjovanovic.com";s:15:"comment_content";s:453:"Hey Oleg. Thanks for nice words and for the recap on your blog as well. We need to spread the word to make this even better.
Open Data might be really good platform to solve this problem and might lead to some needed continuity. I'll take a look to push the idea there. 

And, welcome to Switzerland. I'm happy to see your integration running smoothly from the first day. I passed that couple of years before. 
After some time you just get used to it ;)";s:14:"comment_parent";s:4:"1006";s:7:"user_ID";s:1:"1";s:7:"user_ip";s:14:"178.195.81.104";s:10:"user_agent";s:118:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_7) AppleWebKit/534.30 (KHTML, like Gecko) Chrome/12.0.742.91 Safari/534.30";s:8:"referrer";s:56:"http://blog.ivanjovanovic.com/wp-admin/edit-comments.php";s:4:"blog";s:29:"http://blog.ivanjovanovic.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:105:"http://blog.ivanjovanovic.com/2011/06/06/random-hacks-of-kindness-building-better-world-commit-by-commit/";s:9:"user_role";s:13:"administrator";s:21:"akismet_comment_nonce";s:6:"passed";s:22:"POST_newcomment_author";s:0:"";s:28:"POST_newcomment_author_email";s:0:"";s:26:"POST_newcomment_author_url";s:0:"";s:12:"POST_user_ID";s:1:"1";s:11:"POST_action";s:15:"replyto-comment";s:15:"POST_comment_ID";s:4:"1006";s:20:"POST_comment_post_ID";s:3:"153";s:11:"POST_status";s:0:"";s:13:"POST_position";s:2:"-1";s:13:"POST_checkbox";s:1:"1";s:9:"POST_mode";s:6:"detail";s:32:"POST__ajax_nonce-replyto-comment";s:10:"250e70a009";s:32:"POST__wp_unfiltered_html_comment";s:10:"4f1c124f98";s:12:"POST_content";s:453:"Hey Oleg. Thanks for nice words and for the recap on your blog as well. We need to spread the word to make this even better.
Open Data might be really good platform to solve this problem and might lead to some needed continuity. I'll take a look to push the idea there. 

And, welcome to Switzerland. I'm happy to see your integration running smoothly from the first day. I passed that couple of years before. 
After some time you just get used to it ;)";s:7:"POST_id";s:3:"153";s:21:"POST_comments_listing";s:3:"all";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:24:"/wp-admin/admin-ajax.php";s:14:"CONTENT_LENGTH";s:3:"770";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:13:"DOCUMENT_ROOT";s:71:"/home1/studioag/public_html/___domains_ivanjovanovic/___subdomains/blog";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"HTTP_ACCEPT";s:3:"*/*";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.3";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-US,en;q=0.8";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:11:"HTTP_COOKIE";s:0:"";s:9:"HTTP_HOST";s:22:"blog.ivanjovanovic.com";s:11:"HTTP_ORIGIN";s:29:"http://blog.ivanjovanovic.com";s:12:"HTTP_REFERER";s:56:"http://blog.ivanjovanovic.com/wp-admin/edit-comments.php";s:15:"HTTP_USER_AGENT";s:118:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_7) AppleWebKit/534.30 (KHTML, like Gecko) Chrome/12.0.742.91 Safari/534.30";s:21:"HTTP_X_REQUESTED_WITH";s:14:"XMLHttpRequest";s:4:"PATH";s:13:"/bin:/usr/bin";s:12:"QUERY_STRING";s:0:"";s:15:"REDIRECT_STATUS";s:3:"200";s:11:"REMOTE_ADDR";s:14:"178.195.81.104";s:11:"REMOTE_PORT";s:5:"51850";s:14:"REQUEST_METHOD";s:4:"POST";s:15:"SCRIPT_FILENAME";s:95:"/home1/studioag/public_html/___domains_ivanjovanovic/___subdomains/blog/wp-admin/admin-ajax.php";s:11:"SCRIPT_NAME";s:24:"/wp-admin/admin-ajax.php";s:11:"SERVER_ADDR";s:14:"66.147.242.187";s:12:"SERVER_ADMIN";s:32:"webmaster@blog.ivanjovanovic.com";s:11:"SERVER_NAME";s:22:"blog.ivanjovanovic.com";s:11:"SERVER_PORT";s:2:"80";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:16:"SERVER_SIGNATURE";s:67:"<address>Apache Server at blog.ivanjovanovic.com Port 80</address>
";s:9:"UNIQUE_ID";s:24:"TfaRhkKT8rsAAEsO0D4AAAFR";s:8:"W3TC_ENC";s:5:".gzip";s:9:"file_gzip";s:20:"/ramdisk/cpud/status";s:8:"PHP_SELF";s:24:"/wp-admin/admin-ajax.php";s:12:"REQUEST_TIME";s:10:"1308004742";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[272498263]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[272498265]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1006</wp:comment_id>
			<wp:comment_author><![CDATA[Oleg]]></wp:comment_author>
			<wp:comment_author_email>oleg@utou.ch</wp:comment_author_email>
			<wp:comment_author_url>http://oleg.utou.ch</wp:comment_author_url>
			<wp:comment_author_IP>213.202.53.85</wp:comment_author_IP>
			<wp:comment_date>2011-06-11 17:29:24</wp:comment_date>
			<wp:comment_date_gmt>2011-06-11 17:29:24</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Excellent post, Ivan, and I agree with all your suggestions. Your project was particularly challenging in the way you were trying to process difficult-to-obtain data, which it may be worth plugging in to the <a href="http://www.opendataday.org/" rel="nofollow">Open Data</a> community.

For a first time I thought RHoK was a very smooth operation, and a great foundation to build on for the local community. I've mentioned your post in my own <a href="http://ol.posterous.com/random-hacks-of-kindness-basel" rel="nofollow">blog about the event</a>.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:12:"1308004469.2";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1307813364.12";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:62:{s:15:"comment_post_ID";s:3:"153";s:14:"comment_author";s:4:"Oleg";s:20:"comment_author_email";s:12:"oleg@utou.ch";s:18:"comment_author_url";s:19:"http://oleg.utou.ch";s:15:"comment_content";s:520:"Excellent post, Ivan, and I agree with all your suggestions. Your project was particularly challenging in the way you were trying to process difficult-to-obtain data, which it may be worth plugging in to the <a href="http://www.opendataday.org/">Open Data</a> community.

For a first time I thought RHoK was a very smooth operation, and a great foundation to build on for the local community. I've mentioned your post in my own <a href="http://ol.posterous.com/random-hacks-of-kindness-basel">blog about the event</a>.";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:13:"213.202.53.85";s:10:"user_agent";s:103:"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/534.30 (KHTML, like Gecko) Chrome/12.0.742.91 Safari/534.30";s:8:"referrer";s:105:"http://blog.ivanjovanovic.com/2011/06/06/random-hacks-of-kindness-building-better-world-commit-by-commit/";s:4:"blog";s:29:"http://blog.ivanjovanovic.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:105:"http://blog.ivanjovanovic.com/2011/06/06/random-hacks-of-kindness-building-better-world-commit-by-commit/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:12:"POST_comment";s:520:"Excellent post, Ivan, and I agree with all your suggestions. Your project was particularly challenging in the way you were trying to process difficult-to-obtain data, which it may be worth plugging in to the <a href="http://www.opendataday.org/">Open Data</a> community.

For a first time I thought RHoK was a very smooth operation, and a great foundation to build on for the local community. I've mentioned your post in my own <a href="http://ol.posterous.com/random-hacks-of-kindness-basel">blog about the event</a>.";s:11:"POST_author";s:4:"Oleg";s:10:"POST_email";s:12:"oleg@utou.ch";s:8:"POST_url";s:19:"http://oleg.utou.ch";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"153";s:26:"POST_akismet_comment_nonce";s:10:"711db288ea";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:14:"CONTENT_LENGTH";s:3:"732";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:13:"DOCUMENT_ROOT";s:71:"/home1/studioag/public_html/___domains_ivanjovanovic/___subdomains/blog";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.3";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:41:"en,en-US;q=0.8,fr;q=0.6,de;q=0.4,ru;q=0.2";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:11:"HTTP_COOKIE";s:0:"";s:9:"HTTP_HOST";s:22:"blog.ivanjovanovic.com";s:11:"HTTP_ORIGIN";s:29:"http://blog.ivanjovanovic.com";s:12:"HTTP_REFERER";s:105:"http://blog.ivanjovanovic.com/2011/06/06/random-hacks-of-kindness-building-better-world-commit-by-commit/";s:15:"HTTP_USER_AGENT";s:103:"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/534.30 (KHTML, like Gecko) Chrome/12.0.742.91 Safari/534.30";s:4:"PATH";s:13:"/bin:/usr/bin";s:12:"QUERY_STRING";s:0:"";s:15:"REDIRECT_STATUS";s:3:"200";s:11:"REMOTE_ADDR";s:13:"213.202.53.85";s:11:"REMOTE_PORT";s:5:"33597";s:14:"REQUEST_METHOD";s:4:"POST";s:15:"SCRIPT_FILENAME";s:92:"/home1/studioag/public_html/___domains_ivanjovanovic/___subdomains/blog/wp-comments-post.php";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:11:"SERVER_ADDR";s:14:"66.147.242.187";s:12:"SERVER_ADMIN";s:32:"webmaster@blog.ivanjovanovic.com";s:11:"SERVER_NAME";s:22:"blog.ivanjovanovic.com";s:11:"SERVER_PORT";s:2:"80";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:16:"SERVER_SIGNATURE";s:67:"<address>Apache Server at blog.ivanjovanovic.com Port 80</address>
";s:9:"UNIQUE_ID";s:24:"TfOl80KT8rsAADc6i7QAAAJU";s:8:"W3TC_ENC";s:5:".gzip";s:9:"file_gzip";s:20:"/ramdisk/cpud/status";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1307813363";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[272498263]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Why (I think) Khan Academy really matters.</title>
		<link>http://blog.ivanjovanovic.com/2011/06/09/why-khan-academy-really-matters/</link>
		<pubDate>Thu, 09 Jun 2011 22:12:07 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.ivanjovanovic.com/?p=174</guid>
		<description></description>
		<content:encoded><![CDATA[Today I made <a title="Serbian translation of Khan Academy video" href="http://www.universalsubtitles.org/en/videos/2QEdZnl4jZvK/sr/115753/">first translation to Serbian on Khan Academy</a> and this post is about why I loved doing it and why I think it really matters.

If you havent heard of <a title="Khan Academy" href="http://www.khanacademy.org/">Khan Academy</a> yet you should immediately get out that rock you are hiding under. No joke, Khan Academy is a big thing. Watch <a title="Salman Khan TED talk" href="http://www.ted.com/talks/salman_khan_let_s_use_video_to_reinvent_education.html">this TED talk</a> to see how amazing is what Salman Khan is doing. I was really happy when I saw that <a href="http://ejohn.org/">John Resig of jQuery fame</a> has <a href="http://ejohn.org/blog/next-steps-in-2011/">joined their crew</a> to help bringing this extraordinary mission to the next level. It is really extraordinary, especially for the times of today when everything is in profits and money. But it doesn't matter only because of that.

I come from Serbia, country which is in kind of development. Last 20 years where not that good for us. Degradation of every part of society to the critical level happened during that time. People mostly without jobs, hope and will to go forward despite the fact that time passes by them fast. Yes, time passes by and developed world is changing even faster every day. And if you stand still for 20 years, you can imagine how far world goes in front of you. It goes so far that you, from your own point of view don't understand any more all that modern development and trends.

So the big question for countries like Serbia is how do they catch up with the modern world. How do you learn things you have to know when you don't have access to good and innovative education, have no great people to lead the country because they are all spread around the world. Well, there are options. And improving education of people is in the core of all of them. In this context Khan Academy really matters. Not as final solution but more as announcement of future where education is going to be much less institutionalized and much easier spread across the globe, especially in the countries which need this the most.

Internet has evolved to a point where it is becoming a platform for spreading something more than Facebook and Farmville. Recently I watched <a title="Chris Anderson on TED.com" href="http://www.ted.com/talks/lang/eng/chris_anderson_how_web_video_powers_global_innovation.html">TED talk of Chris Anderson</a> on how web video powers global innovation and I could not agree more. And Khan Academy proves this in practice on a high scale and is able to motivate thousands to join the train of global education improvement and to bring it to the higher level. This might lead to looking at the education in whole lot different ways than before and using peoples potential most efficiently to solve problems of underdeveloped communities. It brings some hope at least.
<p style="text-align: center;">[ted id=1090 lang=scc]</p>
Currently I live in Switzerland, country blessed by the best standard in the world and really great performance in every aspect, from administration to education. One thing I see here is that people are not aware enough how others in the world live and when aware it is on the level of general empathy and not on the level of doing something with it. Paradoxically, countries like this can give the most to the world, not only by sharing money but experiences and knowledge about their success as well. Internet in this case might be a great leverage for small and great ones to influence world wide.

Considering all of this, I though I could be one among this army of good people to help on this idea. I'll try to contribute on this topic as much as I can in my spare time and motivate others to do the same. Translating as much videos to Serbian would be one of primary goals and promoting the idea as well.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>174</wp:post_id>
		<wp:post_date>2011-06-09 22:12:07</wp:post_date>
		<wp:post_date_gmt>2011-06-09 22:12:07</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>why-khan-academy-really-matters</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="community"><![CDATA[community]]></category>
		<category domain="category" nicename="khan-academy"><![CDATA[khan academy]]></category>
		<category domain="category" nicename="personal"><![CDATA[personal]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>ted_talk_1090</wp:meta_key>
			<wp:meta_value><![CDATA[<!--copy and paste--><object width="446" height="326"><param name="movie" value="http://video.ted.com/assets/player/swf/EmbedPlayer.swf"></param><param name="allowFullScreen" value="true" /><param name="allowScriptAccess" value="always"/><param name="wmode" value="transparent"></param><param name="bgColor" value="#ffffff"></param> <param name="flashvars" value="vu=http://video.ted.com/talks/dynamic/SalmanKhan_2011-medium.flv&su=http://images.ted.com/images/ted/tedindex/embed-posters/SalmanKhan-2011.embed_thumbnail.jpg&vw=432&vh=240&ap=0&ti=1090&lang=scc&introDuration=15330&adDuration=4000&postAdDuration=830&adKeys=talk=salman_khan_let_s_use_video_to_reinvent_education;year=2011;theme=new_on_ted_com;theme=a_taste_of_ted2011;event=TED2011;&preAdTag=tconf.ted/embed;tile=1;sz=512x288;" /><embed src="http://video.ted.com/assets/player/swf/EmbedPlayer.swf" pluginspace="http://www.macromedia.com/go/getflashplayer" type="application/x-shockwave-flash" wmode="transparent" bgColor="#ffffff" width="446" height="326" allowFullScreen="true" allowScriptAccess="always" flashvars="vu=http://video.ted.com/talks/dynamic/SalmanKhan_2011-medium.flv&su=http://images.ted.com/images/ted/tedindex/embed-posters/SalmanKhan-2011.embed_thumbnail.jpg&vw=432&vh=240&ap=0&ti=1090&lang=scc&introDuration=15330&adDuration=4000&postAdDuration=830&adKeys=talk=salman_khan_let_s_use_video_to_reinvent_education;year=2011;theme=new_on_ted_com;theme=a_taste_of_ted2011;event=TED2011;"></embed></object>]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[374041956]]></wp:meta_value>
		</wp:postmeta>
		<wp:comment>
			<wp:comment_id>1002</wp:comment_id>
			<wp:comment_author><![CDATA[Marcha]]></wp:comment_author>
			<wp:comment_author_email>marcic74@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://Website</wp:comment_author_url>
			<wp:comment_author_IP>92.244.138.118</wp:comment_author_IP>
			<wp:comment_date>2011-06-10 01:46:59</wp:comment_date>
			<wp:comment_date_gmt>2011-06-10 01:46:59</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Ikac, sve si im super rekao samo se sa jednim ne slazem " Last 20 years where not that good for us. Degradation of every part of society to the critical level happened during that time." Ovde bi se trebalo ograniciti na ono sto mi znamo i pamtimo...  Mislim da u Srbiji nikad nije bilo "good for us". Mozda je "good for us"  bilo od 26.09.2010. do 12.03.2003. Pre toga je prica i dozivljaj nekih drugih, u tom periodu sam se osecao kao covek, a posle toga naš zivot je život na račun trošenja kinetičke energije koju nam je saopstio Zoran Djindjić. Po mom misljenju sistem vrednosti je narocito degradiran u poslednjih 6-7 godina. Ta degradacija je mnogo opasnija jer degradacija od 90-tih ima opravdanje u ratu, Milosevicu, Jul-u i sl,  a ova posle ubistva Zorana Djindjica je degradacija u novom nazovi "demokratskom" okruzenju. Demokratija je je dala popovima da urejduju etar, a kriminalcima, pardon, kontroverznim biznismenima,  da uredjuju privredu i stvaraju monopole. Nepotizam i partiokratija na sve strane. Drzava za bilo sta trazi podrsku crkve.....eeejjjj 21. vek... Nadam se da nisam previse trolovao :)]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1307670419.78";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:62:{s:15:"comment_post_ID";s:3:"174";s:14:"comment_author";s:6:"Marcha";s:20:"comment_author_email";s:18:"marcic74@gmail.com";s:18:"comment_author_url";s:7:"Website";s:15:"comment_content";s:1122:"Ikac, sve si im super rekao samo se sa jednim ne slazem " Last 20 years where not that good for us. Degradation of every part of society to the critical level happened during that time." Ovde bi se trebalo ograniciti na ono sto mi znamo i pamtimo...  Mislim da u Srbiji nikad nije bilo "good for us". Mozda je "good for us"  bilo od 26.09.2010. do 12.03.2003. Pre toga je prica i dozivljaj nekih drugih, u tom periodu sam se osecao kao covek, a posle toga naš zivot je život na račun trošenja kinetičke energije koju nam je saopstio Zoran Djindjić. Po mom misljenju sistem vrednosti je narocito degradiran u poslednjih 6-7 godina. Ta degradacija je mnogo opasnija jer degradacija od 90-tih ima opravdanje u ratu, Milosevicu, Jul-u i sl,  a ova posle ubistva Zorana Djindjica je degradacija u novom nazovi "demokratskom" okruzenju. Demokratija je je dala popovima da urejduju etar, a kriminalcima, pardon, kontroverznim biznismenima,  da uredjuju privredu i stvaraju monopole. Nepotizam i partiokratija na sve strane. Drzava za bilo sta trazi podrsku crkve.....eeejjjj 21. vek... Nadam se da nisam previse trolovao :)";s:12:"comment_type";s:0:"";s:14:"comment_parent";s:1:"0";s:7:"user_ID";s:1:"0";s:7:"user_ip";s:14:"92.244.138.118";s:10:"user_agent";s:100:"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/534.30 (KHTML, like Gecko) Chrome/12.0.742.91 Safari/534.30";s:8:"referrer";s:73:"http://blog.ivanjovanovic.com/2011/06/09/why-khan-academy-really-matters/";s:4:"blog";s:29:"http://blog.ivanjovanovic.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:73:"http://blog.ivanjovanovic.com/2011/06/09/why-khan-academy-really-matters/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"passed";s:12:"POST_comment";s:1124:"Ikac, sve si im super rekao samo se sa jednim ne slazem " Last 20 years where not that good for us. Degradation of every part of society to the critical level happened during that time." Ovde bi se trebalo ograniciti na ono sto mi znamo i pamtimo...  Mislim da u Srbiji nikad nije bilo "good for us". Mozda je "good for us"  bilo od 26.09.2010. do 12.03.2003. Pre toga je prica i dozivljaj nekih drugih, u tom periodu sam se osecao kao covek, a posle toga naš zivot je život na račun trošenja kinetičke energije koju nam je saopstio Zoran Djindjić. Po mom misljenju sistem vrednosti je narocito degradiran u poslednjih 6-7 godina. Ta degradacija je mnogo opasnija jer degradacija od 90-tih ima opravdanje u ratu, Milosevicu, Jul-u i sl,  a ova posle ubistva Zorana Djindjica je degradacija u novom nazovi "demokratskom" okruzenju. Demokratija je je dala popovima da urejduju etar, a kriminalcima, pardon, kontroverznim biznismenima,  da uredjuju privredu i stvaraju monopole. Nepotizam i partiokratija na sve strane. Drzava za bilo sta trazi podrsku crkve.....eeejjjj 21. vek... Nadam se da nisam previse trolovao :)
";s:11:"POST_author";s:6:"Marcha";s:10:"POST_email";s:18:"marcic74@gmail.com";s:8:"POST_url";s:7:"Website";s:11:"POST_submit";s:14:"Submit Comment";s:20:"POST_comment_post_ID";s:3:"174";s:26:"POST_akismet_comment_nonce";s:10:"ebf08f08f2";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:21:"/wp-comments-post.php";s:14:"CONTENT_LENGTH";s:4:"1328";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:13:"DOCUMENT_ROOT";s:71:"/home1/studioag/public_html/___domains_ivanjovanovic/___subdomains/blog";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"HTTP_ACCEPT";s:63:"text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8";s:19:"HTTP_ACCEPT_CHARSET";s:32:"windows-1251,utf-8;q=0.7,*;q=0.3";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:35:"sr-RS,sr;q=0.8,en-US;q=0.6,en;q=0.4";s:18:"HTTP_CACHE_CONTROL";s:9:"max-age=0";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:11:"HTTP_COOKIE";s:0:"";s:9:"HTTP_HOST";s:22:"blog.ivanjovanovic.com";s:11:"HTTP_ORIGIN";s:29:"http://blog.ivanjovanovic.com";s:12:"HTTP_REFERER";s:73:"http://blog.ivanjovanovic.com/2011/06/09/why-khan-academy-really-matters/";s:15:"HTTP_USER_AGENT";s:100:"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/534.30 (KHTML, like Gecko) Chrome/12.0.742.91 Safari/534.30";s:4:"PATH";s:13:"/bin:/usr/bin";s:12:"QUERY_STRING";s:0:"";s:15:"REDIRECT_STATUS";s:3:"200";s:11:"REMOTE_ADDR";s:14:"92.244.138.118";s:11:"REMOTE_PORT";s:5:"49943";s:14:"REQUEST_METHOD";s:4:"POST";s:15:"SCRIPT_FILENAME";s:92:"/home1/studioag/public_html/___domains_ivanjovanovic/___subdomains/blog/wp-comments-post.php";s:11:"SCRIPT_NAME";s:21:"/wp-comments-post.php";s:11:"SERVER_ADDR";s:14:"66.147.242.187";s:12:"SERVER_ADMIN";s:32:"webmaster@blog.ivanjovanovic.com";s:11:"SERVER_NAME";s:22:"blog.ivanjovanovic.com";s:11:"SERVER_PORT";s:2:"80";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:16:"SERVER_SIGNATURE";s:67:"<address>Apache Server at blog.ivanjovanovic.com Port 80</address>
";s:9:"UNIQUE_ID";s:24:"TfF3kkKT8rsAADg8HT8AAAWB";s:8:"W3TC_ENC";s:5:".gzip";s:9:"file_gzip";s:20:"/ramdisk/cpud/status";s:8:"PHP_SELF";s:21:"/wp-comments-post.php";s:12:"REQUEST_TIME";s:10:"1307670419";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[272498279]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1307692538.34";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1009</wp:comment_id>
			<wp:comment_author><![CDATA[Jovanovic Ivan - &raquo; Blog Archive &raquo; Dobrodošlica samom sebi.]]></wp:comment_author>
			<wp:comment_author_email></wp:comment_author_email>
			<wp:comment_author_url>http://ji.rs/2011/06/dobrodoslica-samom-sebi/</wp:comment_author_url>
			<wp:comment_author_IP>66.147.242.187</wp:comment_author_IP>
			<wp:comment_date>2011-06-14 22:27:49</wp:comment_date>
			<wp:comment_date_gmt>2011-06-14 22:27:49</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[...] koncepti volunterističkog doprinosa socijalnom razvoju od strane inženjera. Projekti kao što su Khan Academy, RHoK i slični dobijaju sve više na masovnosti i značaju. Ja volim da učestvujem u takvim [...] ]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type>pingback</wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:12:"1308090469.6";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:45:{s:15:"comment_post_ID";s:3:"174";s:14:"comment_author";s:71:"Jovanovic Ivan - &raquo; Blog Archive &raquo; Dobrodošlica samom sebi.";s:18:"comment_author_url";s:45:"http://ji.rs/2011/06/dobrodoslica-samom-sebi/";s:20:"comment_author_email";s:0:"";s:15:"comment_content";s:218:"[...] koncepti volunterističkog doprinosa socijalnom razvoju od strane inženjera. Projekti kao što su Khan Academy, RHoK i slični dobijaju sve više na masovnosti i značaju. Ja volim da učestvujem u takvim [...]";s:12:"comment_type";s:8:"pingback";s:7:"user_ip";s:14:"66.147.242.187";s:10:"user_agent";s:50:"The Incutio XML-RPC PHP Library -- WordPress/3.1.3";s:8:"referrer";s:0:"";s:4:"blog";s:29:"http://blog.ivanjovanovic.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:73:"http://blog.ivanjovanovic.com/2011/06/09/why-khan-academy-really-matters/";s:9:"user_role";s:0:"";s:21:"akismet_comment_nonce";s:6:"failed";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:11:"/xmlrpc.php";s:14:"CONTENT_LENGTH";s:3:"319";s:12:"CONTENT_TYPE";s:8:"text/xml";s:13:"DOCUMENT_ROOT";s:71:"/home1/studioag/public_html/___domains_ivanjovanovic/___subdomains/blog";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"HTTP_ACCEPT";s:3:"*/*";s:20:"HTTP_ACCEPT_ENCODING";s:29:"deflate;q=1.0, compress;q=0.5";s:9:"HTTP_HOST";s:22:"blog.ivanjovanovic.com";s:15:"HTTP_USER_AGENT";s:50:"The Incutio XML-RPC PHP Library -- WordPress/3.1.3";s:4:"PATH";s:13:"/bin:/usr/bin";s:12:"QUERY_STRING";s:0:"";s:15:"REDIRECT_STATUS";s:3:"200";s:11:"REMOTE_ADDR";s:14:"66.147.242.187";s:11:"REMOTE_PORT";s:5:"47179";s:14:"REQUEST_METHOD";s:4:"POST";s:15:"SCRIPT_FILENAME";s:82:"/home1/studioag/public_html/___domains_ivanjovanovic/___subdomains/blog/xmlrpc.php";s:11:"SCRIPT_NAME";s:11:"/xmlrpc.php";s:11:"SERVER_ADDR";s:14:"66.147.242.187";s:12:"SERVER_ADMIN";s:32:"webmaster@blog.ivanjovanovic.com";s:11:"SERVER_NAME";s:22:"blog.ivanjovanovic.com";s:11:"SERVER_PORT";s:2:"80";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.0";s:16:"SERVER_SIGNATURE";s:67:"<address>Apache Server at blog.ivanjovanovic.com Port 80</address>
";s:9:"UNIQUE_ID";s:24:"TffgY0KT8rsAAGiQQVUAAAAZ";s:9:"file_gzip";s:20:"/ramdisk/cpud/status";s:8:"PHP_SELF";s:11:"/xmlrpc.php";s:12:"REQUEST_TIME";s:10:"1308090467";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:13:"1308090639.32";s:7:"message";s:44:"admin changed the comment status to approved";s:5:"event";s:15:"status-approved";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
		<wp:comment>
			<wp:comment_id>1004</wp:comment_id>
			<wp:comment_author><![CDATA[Ivan Jovanovic]]></wp:comment_author>
			<wp:comment_author_email>ivan.jovanovic@gmail.com</wp:comment_author_email>
			<wp:comment_author_url>http://www.ivanjovanovic.com</wp:comment_author_url>
			<wp:comment_author_IP>188.60.186.93</wp:comment_author_IP>
			<wp:comment_date>2011-06-10 07:55:33</wp:comment_date>
			<wp:comment_date_gmt>2011-06-10 07:55:33</wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Uglavom se slažem se sa tobom. Stvar je u tome što ovaj tekst nije imao za cilj da se bavi unutrašnjim prilikama na srpskoj dnevno-političkoj sceni pa sam samo hteo da jednostavno kažem da smo u medjuvremenu propali. Cilj je bio da naznačim da zemlje u razvoju imaju mnogo veću šansu da putem modernih, inovativnih i nekonvencionalnih tehnologija sustignu moderni svet ukoliko sagledaju problem na drugi način.
Za novo "demokratsko" okruženje ne vredi da se troše reči a sa druge strane valjda i poslednjih nekoliko godina ulaze u "Last 20 years" koje nisu bile naklonjene nama.]]></wp:comment_content>
			<wp:comment_approved>1</wp:comment_approved>
			<wp:comment_type></wp:comment_type>
			<wp:comment_parent>1002</wp:comment_parent>
			<wp:comment_user_id>1</wp:comment_user_id>
			<wp:commentmeta>
				<wp:meta_key>dsq_parent_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[272498279]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>dsq_post_id</wp:meta_key>
				<wp:meta_value><![CDATA[272498280]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_result</wp:meta_key>
				<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_history</wp:meta_key>
				<wp:meta_value><![CDATA[a:4:{s:4:"time";s:12:"1307692533.5";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:5:"admin";}]]></wp:meta_value>
			</wp:commentmeta>
			<wp:commentmeta>
				<wp:meta_key>akismet_as_submitted</wp:meta_key>
				<wp:meta_value><![CDATA[a:70:{s:15:"comment_post_ID";s:3:"174";s:14:"comment_author";s:14:"Ivan Jovanovic";s:20:"comment_author_email";s:24:"ivan.jovanovic@gmail.com";s:18:"comment_author_url";s:28:"http://www.ivanjovanovic.com";s:15:"comment_content";s:590:"Uglavom se slažem se sa tobom. Stvar je u tome što ovaj tekst nije imao za cilj da se bavi unutrašnjim prilikama na srpskoj dnevno-političkoj sceni pa sam samo hteo da jednostavno kažem da smo u medjuvremenu propali. Cilj je bio da naznačim da zemlje u razvoju imaju mnogo veću šansu da putem modernih, inovativnih i nekonvencionalnih tehnologija sustignu moderni svet ukoliko sagledaju problem na drugi način.
Za novo "demokratsko" okruženje ne vredi da se troše reči a sa druge strane valjda i poslednjih nekoliko godina ulaze u "Last 20 years" koje nisu bile naklonjene nama.";s:14:"comment_parent";s:4:"1002";s:7:"user_ID";s:1:"1";s:7:"user_ip";s:13:"188.60.186.93";s:10:"user_agent";s:118:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_7) AppleWebKit/534.24 (KHTML, like Gecko) Chrome/11.0.696.77 Safari/534.24";s:8:"referrer";s:56:"http://blog.ivanjovanovic.com/wp-admin/edit-comments.php";s:4:"blog";s:29:"http://blog.ivanjovanovic.com";s:9:"blog_lang";s:5:"en_US";s:12:"blog_charset";s:5:"UTF-8";s:9:"permalink";s:73:"http://blog.ivanjovanovic.com/2011/06/09/why-khan-academy-really-matters/";s:9:"user_role";s:13:"administrator";s:21:"akismet_comment_nonce";s:6:"passed";s:22:"POST_newcomment_author";s:0:"";s:28:"POST_newcomment_author_email";s:0:"";s:26:"POST_newcomment_author_url";s:0:"";s:12:"POST_user_ID";s:1:"1";s:11:"POST_action";s:15:"replyto-comment";s:15:"POST_comment_ID";s:4:"1002";s:20:"POST_comment_post_ID";s:3:"174";s:11:"POST_status";s:0:"";s:13:"POST_position";s:2:"-1";s:13:"POST_checkbox";s:1:"1";s:9:"POST_mode";s:6:"detail";s:32:"POST__ajax_nonce-replyto-comment";s:10:"cdca1d2d2f";s:32:"POST__wp_unfiltered_html_comment";s:10:"e64dab0358";s:12:"POST_content";s:590:"Uglavom se slažem se sa tobom. Stvar je u tome što ovaj tekst nije imao za cilj da se bavi unutrašnjim prilikama na srpskoj dnevno-političkoj sceni pa sam samo hteo da jednostavno kažem da smo u medjuvremenu propali. Cilj je bio da naznačim da zemlje u razvoju imaju mnogo veću šansu da putem modernih, inovativnih i nekonvencionalnih tehnologija sustignu moderni svet ukoliko sagledaju problem na drugi način.
Za novo "demokratsko" okruženje ne vredi da se troše reči a sa druge strane valjda i poslednjih nekoliko godina ulaze u "Last 20 years" koje nisu bile naklonjene nama.";s:7:"POST_id";s:3:"174";s:21:"POST_comments_listing";s:3:"all";s:15:"SERVER_SOFTWARE";s:6:"Apache";s:11:"REQUEST_URI";s:24:"/wp-admin/admin-ajax.php";s:14:"CONTENT_LENGTH";s:3:"955";s:12:"CONTENT_TYPE";s:33:"application/x-www-form-urlencoded";s:13:"DOCUMENT_ROOT";s:71:"/home1/studioag/public_html/___domains_ivanjovanovic/___subdomains/blog";s:17:"GATEWAY_INTERFACE";s:7:"CGI/1.1";s:11:"HTTP_ACCEPT";s:3:"*/*";s:19:"HTTP_ACCEPT_CHARSET";s:30:"ISO-8859-1,utf-8;q=0.7,*;q=0.3";s:20:"HTTP_ACCEPT_ENCODING";s:17:"gzip,deflate,sdch";s:20:"HTTP_ACCEPT_LANGUAGE";s:14:"en-US,en;q=0.8";s:15:"HTTP_CONNECTION";s:10:"keep-alive";s:11:"HTTP_COOKIE";s:0:"";s:9:"HTTP_HOST";s:22:"blog.ivanjovanovic.com";s:11:"HTTP_ORIGIN";s:29:"http://blog.ivanjovanovic.com";s:12:"HTTP_REFERER";s:56:"http://blog.ivanjovanovic.com/wp-admin/edit-comments.php";s:15:"HTTP_USER_AGENT";s:118:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_7) AppleWebKit/534.24 (KHTML, like Gecko) Chrome/11.0.696.77 Safari/534.24";s:21:"HTTP_X_REQUESTED_WITH";s:14:"XMLHttpRequest";s:4:"PATH";s:13:"/bin:/usr/bin";s:12:"QUERY_STRING";s:0:"";s:15:"REDIRECT_STATUS";s:3:"200";s:11:"REMOTE_ADDR";s:13:"188.60.186.93";s:11:"REMOTE_PORT";s:5:"59286";s:14:"REQUEST_METHOD";s:4:"POST";s:15:"SCRIPT_FILENAME";s:95:"/home1/studioag/public_html/___domains_ivanjovanovic/___subdomains/blog/wp-admin/admin-ajax.php";s:11:"SCRIPT_NAME";s:24:"/wp-admin/admin-ajax.php";s:11:"SERVER_ADDR";s:14:"66.147.242.187";s:12:"SERVER_ADMIN";s:32:"webmaster@blog.ivanjovanovic.com";s:11:"SERVER_NAME";s:22:"blog.ivanjovanovic.com";s:11:"SERVER_PORT";s:2:"80";s:15:"SERVER_PROTOCOL";s:8:"HTTP/1.1";s:16:"SERVER_SIGNATURE";s:67:"<address>Apache Server at blog.ivanjovanovic.com Port 80</address>
";s:9:"UNIQUE_ID";s:24:"TfHN9EKT8rsAADCjupUAAAHF";s:8:"W3TC_ENC";s:5:".gzip";s:9:"file_gzip";s:20:"/ramdisk/cpud/status";s:8:"PHP_SELF";s:24:"/wp-admin/admin-ajax.php";s:12:"REQUEST_TIME";s:10:"1307692532";s:4:"argv";s:0:"";s:4:"argc";s:1:"0";}]]></wp:meta_value>
			</wp:commentmeta>
		</wp:comment>
	</item>
	<item>
		<title>Introduction to JavaScript BDD testing with Jasmine library</title>
		<link>http://blog.ivanjovanovic.com/2011/07/22/introduction-to-javascript-bdd-testing-with-jasmine-library/</link>
		<pubDate>Fri, 22 Jul 2011 21:03:31 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.ivanjovanovic.com/?p=203</guid>
		<description></description>
		<content:encoded><![CDATA[If we look at the developments in the software testing area, step beyond in evolution after <a title="Razvoj vođen testovima" href="http://en.wikipedia.org/wiki/Test-driven_development">TDD</a> is, so called, <a title="Razvoj softvera vođen ponašanjem" href="http://en.wikipedia.org/wiki/Behavior_Driven_Development">BDD</a> (Behavior Deriven Development). It is hard to describe BDD in couple of sentences. Excerpt taken from Wikipedia says:
<blockquote>BDD focuses on obtaining a clear understanding of desired software behaviour through discussion with stakeholders. It extends <a title="Test-driven development" href="http://en.wikipedia.org/wiki/Test-driven_development">TDD</a> by writing test cases in a natural language that non-programmers can read. Behavior-driven developers use their native language to describe the purpose and benefit of their code. This allows the developers to focus on why the code should be created, rather than the technical details, and minimizes translation between the technical language in which the code is written and the domain language spoken by the business, users, stakeholders, project management, etc.</blockquote>
If this looks a bit complicated, in one sentence it would mean: <strong>BDD helps programmers and non-technical stakeholders understand each other better and develop software which will be the most representative model of the problem solved by writing the software  itself. </strong>
<h2>Jasmine: BDD for your JavaScript</h2>
<a title="Jasmine: BDD za vaš JavaScript" href="http://pivotal.github.com/jasmine/">Jasmine</a> is a library for BDD testing of your JavaScript. It offers range of possibilities to describe software functionalities by simple and descriptive tests, which is one of the basic principles of BDD based development. This way tests usually serve as the most accurate software documentation. More about Jasmine library on the <a title="Jasmine na GitHub" href="https://github.com/pivotal/jasmine">GitHub repository</a>.

After you download standalone Jasmine distribution from <a title="Nezavisna distribucija Jasmine biblioteke" href="http://pivotal.github.com/jasmine/download.html">here</a> you'll find in the archive all you need to write your first tests together with the example of your code organization. The most important fie is <strong>SpecRunner.html</strong> which, when run in browser, will execute tests and give you report about the state of the tests. SpecRunner.html is very simple and self explanatory. <strong>lib</strong> folder contains Jasmine library, <strong>src</strong> folder contains code to be tested and  <strong>spec</strong> folder contains actual software specifications as tests.

Further, I will implement simple object that can register multiple callback functions and call them with given data. Something like simple observer. I will always first write tests and then implement functionality to make tests pass.
<h2>Example of simple JavaScript observer with Jasmine tests</h2>
We start from the downloaded archive for standalone Jasmine library. We need to delete example code provided with the library to implement our own example.

[bash]cd jasmine-standalone # folder in which we extracted downloaded archive
rm src/*
rm spec/*[/bash]

Also, from <code>SpecRunner.html</code> file we delete references to just removed scripts. Therefore, part which includes them stays empty like this:

[javascript htmlscript="1"]
...

  &lt;!-- include source files here... --&gt;

  &lt;!-- include spec files here... --&gt;

...
[/javascript]
<h3>First test</h3>
In TDD and BDD philosophy one rule is essential for success.
<blockquote>First you write the test which will at the beginning fail, then you implement code which should satisfy specification described by test. Then, you execute test and continue with implementation until test passes. When that happens you know that implementation is OK.</blockquote>
According to this we create file to place our tests in <code>spec/ObserverSpec.js</code> and we define first test to simply check existence of the observer object.

[javascript]
describe(&quot;rs.ji.observer&quot;, function () {

    it(&quot;should be present in the global namespace&quot;, function () {
        expect(rs.ji.observer).toBeDefined();
    });

});
[/javascript]

And we add this specification to <code>SpecRunner.html</code> to execute it:

[html]
&lt;!-- include spec files here... --&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;spec/ObserverSpec.js&quot;&gt;&lt;/script&gt;
[/html]

If we now open <code>SpecRunner.html</code> in some browser (i.e. Google Chrome) we will see one failing test.

It is important to take a look in how our test looks like. If you read the test you'll see how descriptive it is and how with simple words expresses how our code should behave, although example is very simple. Here it takes some creativity of the developer to make tests really valuable but more than that is important that developer have deep understanding of the dictionary and terminology of the domain for which software is developed because understanding of the domain should be heavily embedded in the test definitions.

Next step is to implement the code which will satisfy test. We will create file <code>src/observer.js</code>

[javascript]
// defining so called namespace objects so I can namespace observer into
// rs.ji.observer
var rs = {};
rs.ji = {};

// observer implementation
rs.ji.observer = {};
[/javascript]

And we will add it to <code>SpecRunner.html</code>:

[html]
&lt;!-- include source files here... --&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;src/observer.js&quot;&gt;&lt;/script&gt;
[/html]

If we run <code>SpecRunner.html</code> again, we can see that our test passes, it is green :)
<h3>Rest of implementation</h3>
Now, when we know for the principle  <strong>"First failing test, then implementation"</strong> we can add new functionalities to our simple example. We add next test:

[javascript]
    it(&quot;should be able to register callback function&quot;, function () {
        // define function to be placed into the observer register
        function callback() { return null; }
        rs.ji.observer.register(callback);
        var callbacks = rs.ji.observer.getCallbacks();
        expect(callbacks.length).toBe(1);
        expect(callbacks[0]).toBe(callback);
    });
[/javascript]

And implementation that makes this test pass:

[javascript]
rs.ji.observer = {
    callbacks: [],
    register: function (callback) {
        this.callbacks.push(callback);
    },
    getCallbacks: function () {
        return this.callbacks;
    }
};
[/javascript]

We want to check if we can register multiple callbacks. This functionality should be supported already, but we write test to confirm this:

[javascript]
    // before every test we reset array of callbacks
    beforeEach(function () {
        rs.ji.observer.callbacks = [];
    });

    it(&quot;should be able to register multiple callbacks&quot;, function () {
        function callback1() { return null; }
        function callback2() { return null; }
        rs.ji.observer.register(callback1);
        rs.ji.observer.register(callback2);
        var callbacks = rs.ji.observer.getCallbacks();
        expect(callbacks.length).toBe(2);
        expect(callbacks[0]).toBe(callback1);
        expect(callbacks[1]).toBe(callback2);
    });
[/javascript]

Programmers often use <code>print, echo</code> and friends to test code for certain functionalities. That takes time as for writing a test, but from other side tests are possible to be executed all the time after this initial check is done even when we move to implement something else.

If we run <code>SpecRunner.html</code> in browser, all tests should pass.

Last thing our observer should do to satisfy its basic purpose is to update callback functions with some new information. That means it should be able to call them with some data. To define this functionality we write new test:

[javascript]
    it(&quot;should provide update method to execute all callbacks with provided data&quot;, function () {
        window.callback1 = function () { return null; }
        window.callback2 = function () { return null; }
        spyOn(window, 'callback1');
        spyOn(window, 'callback2');
        rs.ji.observer.register(window.callback1);
        rs.ji.observer.register(window.callback2);
        rs.ji.observer.update(&quot;data string&quot;);
        expect(window.callback1).toHaveBeenCalledWith(&quot;data string&quot;);
        expect(window.callback2).toHaveBeenCalledWith(&quot;data string&quot;);
    });
[/javascript]

Here we use some advanced techniques of <a title="Jasmine špijuniranje metoda" href="https://github.com/pivotal/jasmine/wiki/Spies">spying on methods</a> (SpyOn) in order to see if some method is called while other is executed.

As a helper, we will add <a title="jQuery biblioteka" href="http://code.jquery.com/jquery-1.6.2.min.js">jQuery library</a> to <code>src/jquery.js</code> location and add it to <code>SpecRunner.html</code> file:

[html highlight="2"]
&lt;!-- include source files here... --&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;src/jquery.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;src/observer.js&quot;&gt;&lt;/script&gt;
[/html]

And we implement code to satisfy the test:

[javascript lines="1" highlight="11,12,13,14,15,16,17"]
// observer implementation
rs.ji.observer = {
    callbacks: [],
    register: function (callback) {
        this.callbacks.push(callback);
    },
    getCallbacks: function () {
        return this.callbacks;
    },

    // added update method to inform registered callbacks
    // uses jQuery to iterate over the array
    update: function(data) {
        $.each(this.callbacks, function (i, callback) {
            callback.call(null, data); // call every callback with provided data
        });
    }
};
[/javascript]
<h2>Complete picutre</h2>
That is it, now we have full implementation of simple observer with tests that can pretty clearly describe functionalities of the software we developed and they can as well prove in every time that needed functionalities are working OK by executing them in the browser (or different browsers to see if they will work in all of them).

Complete files:

[javascript title="spec/ObserverSpec.js" collapse="1"]
describe(&quot;rs.ji.observer&quot;, function () {

    beforeEach(function () {
        rs.ji.observer.callbacks = [];
    });

    it(&quot;should be present in the global namespace&quot;, function () {
        expect(rs.ji.observer).toBeDefined();
    });

    it(&quot;should be able to register callback function&quot;, function () {
        // define anonymous function to be placed into the observer register
        function callback() { return null; }
        rs.ji.observer.register(callback);
        var callbacks = rs.ji.observer.getCallbacks();
        expect(callbacks.length).toBe(1);
        expect(callbacks[0]).toBe(callback); // so we need to have first funtion in registered callbacks
    });

    it(&quot;should be able to register multiple callbacks&quot;, function () {
        function callback1() { return null; }
        function callback2() { return null; }
        rs.ji.observer.register(callback1);
        rs.ji.observer.register(callback2);
        var callbacks = rs.ji.observer.getCallbacks();
        expect(callbacks.length).toBe(2);
        expect(callbacks[0]).toBe(callback1);
        expect(callbacks[1]).toBe(callback2);
    });

    it(&quot;should provide update method to execute all callbacks with provided data&quot;, function () {
        window.callback1 = function () { return null; }
        window.callback2 = function () { return null; }
        spyOn(window, 'callback1');
        spyOn(window, 'callback2');
        rs.ji.observer.register(window.callback1);
        rs.ji.observer.register(window.callback2);
        rs.ji.observer.update(&quot;data string&quot;);
        expect(window.callback1).toHaveBeenCalledWith(&quot;data string&quot;);
        expect(window.callback2).toHaveBeenCalledWith(&quot;data string&quot;);
    });
});
[/javascript]
[javascript title="src/observer.js" collapse="1"]
// defining so called namespace objects so I can namespace observer into
// rs.ji.observer
var rs = {};
rs.ji = {};

// observer implementation
rs.ji.observer = {
    callbacks: [],
    register: function (callback) {
        this.callbacks.push(callback);
    },
    getCallbacks: function () {
        return this.callbacks;
    },
    update: function(data) {
        $.each(this.callbacks, function (i, callback) {
            callback.call(null, data);
        });
    }

};
[/javascript] ]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>203</wp:post_id>
		<wp:post_date>2011-07-22 21:03:31</wp:post_date>
		<wp:post_date_gmt>2011-07-22 21:03:31</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>introduction-to-javascript-bdd-testing-with-jasmine-library</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="jasmine"><![CDATA[jasmine]]></category>
		<category domain="category" nicename="javascript"><![CDATA[javascript]]></category>
		<category domain="category" nicename="testing"><![CDATA[testing]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[374020783]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>CoffeeScript implementation of Conway&#039;s Game of Life</title>
		<link>http://blog.ivanjovanovic.com/2011/08/02/coffeescript-implementation-of-conways-game-of-life/</link>
		<pubDate>Tue, 02 Aug 2011 07:14:48 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.ivanjovanovic.com/?p=217</guid>
		<description></description>
		<content:encoded><![CDATA[Over the weekend I wanted to get a bit deeper into the <a title="CoffeeScript website" href="http://jashkenas.github.com/coffee-script/">CoffeeScript</a> and get around how it feels working with it. I gave myself task to do something simple  but inspiring. Therefore I implemented simple version of Conway's Game of Life to be played in browser. <a title="CoffeeScript Conway's Game of LIfe" href="http://blog.ivanjovanovic.com/labs/cgol/">Go here to see how it looks like</a>.
<h3>CoffeeScript</h3>
<blockquote><strong>CoffeeScript is a little language that compiles into JavaScript.</strong> Underneath all of those embarrassing braces and semicolons, JavaScript has always had a gorgeous object model at its heart. CoffeeScript is an attempt to expose the good parts of JavaScript in a simple way.</blockquote>
In other words, CoffeeScript is an attempt to replace JavaScript syntax with a better one based on experiences from Ruby and Python worlds. Beside that it introduces couple of new abstractions which natively do not exist in the vanilla JavaScript like classes, list comprehensions, return of multiple values from function etc.

CoffeeScript brings a lot of relaxation on the original JavaScript syntax and makes writing it at first weird experience but only until you get used to it. Afterwards it gets obvious that it takes much less to write the same thing in CoffeeScript than in plain JavaScript.
<h3>My observations on developing with CoffeeScript</h3>
First and obvious observation is that with CoffeeScript you need additional tool in your toolset which will continuously compile your work to JavaScript. I used Jasmine for writing tests and I based my setup on <a href="https://gist.github.com/956438">this gist</a> which proposes using <a title="guard Ruby gem on GitHub" href="https://github.com/guard/guard">guard Ruby gem</a> for tracking changes and compiling CoffeeScript files into JavaScript ones.

It looked a bit weird at start, but after couple of hours playing it started getting better. One thing I had always to do is to look in the actual compiled JavaScript to see how to do some things i.e. how to pass index to function that maps an array. But it was intuitive enough that I almost didn't need official documentation. Here I have to tell that it might not be as intuitive to people without experience with writing Ruby and Python code or lack of understanding for rather mathematical

[code lang="javascript"](a, b) -&gt; a + b[/code]

function notation.

At the end I really liked it. Problem that I was solving didn't need using some advanced CoffeeScript constructs like classes but one that I used like multiple return values from the function really show how much you can get out of language if you have some basic tools implemented within.

Last several months I was developing mostly in the Rails framework and since <a title="Ruby on Rails 3.1 enabling CoffeeScript by default" href="http://weblog.rubyonrails.org/2011/5/22/rails-3-1-release-candidate">Rails 3.1</a> is going to have CoffeeScript enabled by default I suppose I'll give CoffeeScript a chance again in next months and write more about experiences developing more complex things again in future.
<h3>Code is on GitHub</h3>
You can find the source code for the implementation of the game on <a title="Source code for CoffeeScript implementation of Conway's Game of Life" href="https://github.com/ivanjovanovic/coffee-cgol">GitHub</a>
<h3>Related links</h3>
<ul>
	<li><a title="CoffeeScript implementation of Conway's Game of Life" href="http://blog.ivanjovanovic.com/labs/cgol/">My CoffeeScript implementation of Conway's Game of Life</a></li>
	<li><a title="CoffeeScript official page" href="http://jashkenas.github.com/coffee-script/">CoffeeScript</a></li>
	<li><a title="Conway's game of life on Wikipedia" href="http://en.wikipedia.org/wiki/Conway's_Game_of_Life">Conway's Game of LIfe on Wikipedia</a></li>
</ul>

&nbsp;]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>217</wp:post_id>
		<wp:post_date>2011-08-02 07:14:48</wp:post_date>
		<wp:post_date_gmt>2011-08-02 07:14:48</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>coffeescript-implementation-of-conways-game-of-life</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="jasmine"><![CDATA[jasmine]]></category>
		<category domain="category" nicename="javascript"><![CDATA[javascript]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_syntaxhighlighter_encoded</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_aioseop_keywords</wp:meta_key>
			<wp:meta_value><![CDATA[coffeescript, javascript, conways game of life]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>dsq_thread_id</wp:meta_key>
			<wp:meta_value><![CDATA[374878941]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>First steps with Go programming language.</title>
		<link>http://blog.ivanjovanovic.com/?p=233</link>
		<pubDate>Wed, 30 Nov -0001 00:00:00 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.ivanjovanovic.com/?p=233</guid>
		<description></description>
		<content:encoded><![CDATA[<h2>Go?</h2>
&nbsp;
<h2>Why Go?</h2>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>233</wp:post_id>
		<wp:post_date>2011-08-23 17:18:43</wp:post_date>
		<wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name></wp:post_name>
		<wp:status>draft</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="go"><![CDATA[Go]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Setting up PHP and Memcached</title>
		<link>http://blog.ivanjovanovic.com/2010/05/07/setting-up-php-and-memcached/</link>
		<pubDate>Fri, 07 May 2010 07:53:22 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.ivanjovanovic.com/?p=65</guid>
		<description></description>
		<content:encoded><![CDATA[Last sprint my team spent time mostly on topics related to Memcached and PHP client configuration. While information is fresh, I will write some points that might make clearer picture for someone not so experienced with this topic. According to the target audience it is not technical in detail but rather focused on the concepts involved.

<a title="Memcached server page" href="http://memcached.org/">Memcached</a> is a free &amp; open source, high-performance, distributed memory object caching system. Usually memcached storage is used for keeping data which is expensive to produce over and over again on every request. Cached data is kept in distributed memory for fast serving. One of most common use cases is caching of a database response so db pool is relaxed from high load and waiting time for the db response is not blocking the request execution.

<!--more-->For making the memcached caching system work you need server that will keep your data in memory and client that will store and retreive data from the distributed memory.
<h3>Server</h3>
Memcached server is installed as a daemon on machines that you would like to use as a storage. More information about the <a title="Installing memcached server" href="http://code.google.com/p/memcached/wiki/NewInstallFromPackage">installation</a> and <a title="Configuring memcached" href="http://code.google.com/p/memcached/wiki/NewConfiguringServer">configuration</a> can be found on the memcached <a title="Memcached wiki" href="http://code.google.com/p/memcached/wiki/NewStart">wiki</a>. After start it will initialize amount of memory you configured it for and will start waiting for clients to put some data inside and start reading from it. For example
<blockquote>/usr/bin/memcached -l 127.0.0.1 -p 12121-m 64</blockquote>
would run instance on port 12121 with 64 MB of memory allocated for the storage. Fact that all the data is in memory means that after server is restarted all data is gone. There can be multiple daemons run on the same machine but this is not something that is usually done. If you would like to have multiple machines running daemons which are not symmetrical in the amount of memory they use it can be configured in client as setting more weight to servers with more memory.
<h3>Client</h3>
Client is used to make some use of the server daemons that are running on your machines. In PHP world there are two PECL packages named similarly . First is named <a title="PHP PECL Memcache extension" href="http://php.net/manual/en/book.memcache.php">Memcache</a> and is implemented fully as independent PHP extension. Second is <a title="PHP PECL Memcached extension" href="http://php.net/manual/en/book.memcached.php">Memcached</a> which is PHP extension implemented as a wrapper around C client library called <a title="Libmemcached site" href="http://libmemcached.org/">libmemcached</a>. At local.ch we use second one. It is more actively maintained and developed and libmemcached is library around which other languages seem to focus client developments as well with taking care of cross compatibility issues. Currently, PHP Memcached in version 1.0.2 is compatible for building against libmemcached 0.39, although there is newer version of the libmemcached out.

Generally, use case is the following. You have some data and want to store it in the cache for later use. You give the name to the data and in the form of key/value pair you save it to the server pool. Afterwards, you request the value stored in cache by the key. This raises the question about how client decides on which server it should store the key/value pair and how to know from which server to retrieve it without looking through all the servers, which would be highly inefficient. If you have one server then there is not much to think, but with massive installations and tens or even hundreds of memcached servers this becomes very important question.

Answer to these questions lies in the hashing algorithm used. By default Memcached client uses hashing algorithm based on the modulo division with the number of servers which are defined in the list of servers client knows about. This approach suffers from a problem of unstable configuration changes. When for example you want to add new server to the pool of servers then list of servers in your client changes, hashing function that relies on number of servers doesn't produce anymore same values and your mappings of keys on the servers are lost for most of the keys. You will numer of keys proportional to the number of servers, more you have, more you lose. In effect it is like you restarted most of your servers.

To conquer this problem PHP Memcached client exposes libmemcached option for using <a title="Consistent hashing wikipedia" href="http://en.wikipedia.org/wiki/Consistent_hashing">consistent hashing</a> algorithm when mapping keys. More details about algorithm can be found <a title="Consistent hashing explained" href="http://www.tomkleinpeter.com/2008/03/17/programmers-toolbox-part-3-consistent-hashing/">here</a>. In effect, when using this algorithm you can change list of servers that client knows about without affecting the whole server pool. Number of keys lost when configuration change is done is reversely proportional to the number of servers you have, more you have, less you lose.

There is lot of other <a title="PHP Memcached client options" href="http://www.php.net/manual/en/memcached.constants.php">options</a> which can be set for the PHP Memcached client. Some of them are related to the way client connects to the servers and are explained in text below.

Connection

- when is connection actually made

- blocking vs non-blocking
- persistent connection, configuration regarding host skipping and retry timeout, auto eject hosts

- add some code to the text
- make some words strong
- clean and publish]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>65</wp:post_id>
		<wp:post_date>2010-05-07 07:53:22</wp:post_date>
		<wp:post_date_gmt>2010-05-07 07:53:22</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>setting-up-php-and-memcached</wp:post_name>
		<wp:status>trash</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="post_tag" nicename="memcached"><![CDATA[memcached]]></category>
		<category domain="post_tag" nicename="php"><![CDATA[php]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
			<wp:meta_value><![CDATA[draft]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
			<wp:meta_value><![CDATA[1314733851]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Streaming standard output to HTTP connection in Python</title>
		<link>http://blog.ivanjovanovic.com/2010/08/07/streaming-standard-output-to-http-connection-in-python/</link>
		<pubDate>Sat, 07 Aug 2010 23:41:45 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.ivanjovanovic.com/?p=81</guid>
		<description></description>
		<content:encoded><![CDATA[- stdout can be

- Transfer-Encodeing chunked

- python script to stream it

- how I used it]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>81</wp:post_id>
		<wp:post_date>2010-08-07 23:41:45</wp:post_date>
		<wp:post_date_gmt>2010-08-07 23:41:45</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>streaming-standard-output-to-http-connection-in-python</wp:post_name>
		<wp:status>trash</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
			<wp:meta_value><![CDATA[draft]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
			<wp:meta_value><![CDATA[1314733842]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Life is somewhere else</title>
		<link>http://blog.ivanjovanovic.com/2011/03/13/life-is-somewhere-else/</link>
		<pubDate>Sun, 13 Mar 2011 21:46:19 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.ivanjovanovic.com/?p=108</guid>
		<description></description>
		<content:encoded><![CDATA[Some weeks earlier I spontaneously got involved in something that turned out to be really great and eye opening experience. It took a while to write this post, but I think it is interesting to share it.
I was planning my weekend, and wanted to see what <a title="Joël Bez - website" href="http://www.lejoe.com/">Joel</a> was up to when he told me that he had plan to go hacking over weekend in order to help guys that run <a href="http://eq.org.nz/">http://eq.org.nz/</a> to polish some things on their website. Hacking, helping, sounded like a good idea to me, so I joined the weekend fun without knowing much details. Later I got to know that this site is used to organize people in Christchurch after latest devastating earthquakes.

Organization was pretty simple. Saturday morning we go to <a href="http://yellow.local.ch/en/d/Zuerich/8002/Google-Switzerland-GmbH-mQdkOw5SinvyKEqvpiNelw?what=google&amp;where=zurich">Google Zürich offices</a>, get instructions what they need on the field and do as much as we can in one day. It was only 4 of us: <a href="http://twitter.com/#!/noirins">Noirin</a> as host at Google, <a href="http://twitter.com/#!/mjollnir">Penny</a>, <a href="http://www.lejoe.com/">Joel</a> and I. It was quite intensive since we had to set-up dev environment and get into the matter pretty fast if we wanted to get anything done that day.  The <a href="http://eq.org.nz/">http://eq.org.nz/</a> website is based on <a href="http://www.ushahidi.com/">Ushahidi</a> geospatial visualization platform which is based on Kohana PHP framework. I was surprised how easy was to get into the code of the platform, although far from perfect, it is one of better organized PHP open source codes around. Overall I was impressed how much small, highly focused, high skilled team can achieve in a day without even deep understanding of the overall context.

Anyways, it is not only that which amazed me. From the other side, the whole thing made me think a bit above some of mine feelings towards technologies, internet before all, and how they affect our lives. As individual that remembers the days before massive adoption of internet I feel that part of our intrinsic humanity is drifting out all of us by constantly interfacing displays and machines instead of real people. I feel that life is getting sucked out of us and placed in the interwebs. It is placed in more or less structured, searchable and more or less massively (ab)usable form. By observing how others think I'm pretty sure that I'm not the only one feeling this way. But looking around the topic of this kind of activism online gave me feeling that whole new way of practicing humanity is on the rise. Even in a much broader way, that were not that easily achievable before are now quite reasonable and expectable.

Curious as always, I looked around what is going on with community around Ushahidi and found some interesting movements, groups and ideas. Ushahidi platform is in general used around the world for mapping various things beside emergent situations, usually by NGOs and motivated groups. And as I see the community around it is growing and structuring pretty fast. It was incredible to see how fast reactions were on the Libya crisis and Japan earthquake. On the other side there is lot of creative energy on this field through RHOK which systematically organize engineers around world to find new ways of handling critical situations with the help of technology enabled communities. Next RHOK days are sometimes in early June and will give my best to participate.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>108</wp:post_id>
		<wp:post_date>2011-03-13 21:46:19</wp:post_date>
		<wp:post_date_gmt>2011-03-13 21:46:19</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>life-is-somewhere-else</wp:post_name>
		<wp:status>trash</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
			<wp:meta_value><![CDATA[draft]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
			<wp:meta_value><![CDATA[1314733820]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Expected Miracles vs continuous improvement</title>
		<link>http://blog.ivanjovanovic.com/2011/08/30/expected-miracles-vs-continuous-improvement/</link>
		<pubDate>Tue, 30 Aug 2011 19:49:58 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.ivanjovanovic.com/?p=141</guid>
		<description></description>
		<content:encoded><![CDATA[- management that doesn't get agile is not too much excited about small gradual changes

- they usually see progress only through big change that is obvious to the user. When you think this way, then you end up in planning releases for months upfront and even if you do Scrum or similar, it looks more like a waterfall release process

- main cause of this is lack of clear vision of core competence of the product, and therefore jumping around fro topic to topic and trying to achieve something out of it. Therefore team implements numerous features that never get released since they never get finished to the state which is releasable, or when they are released, they get forgotten immediately since new feature to be implemented is waiting in the queue.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>141</wp:post_id>
		<wp:post_date>2011-08-30 19:49:58</wp:post_date>
		<wp:post_date_gmt>2011-08-30 19:49:58</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>expected-miracles-vs-continuous-improvement</wp:post_name>
		<wp:status>trash</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
			<wp:meta_value><![CDATA[draft]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
			<wp:meta_value><![CDATA[1315923196]]></wp:meta_value>
		</wp:postmeta>
	</item>
	<item>
		<title>Don&#039;t let users test your UIs.</title>
		<link>http://blog.ivanjovanovic.com/2011/06/17/dont-let-users-test-your-uis/</link>
		<pubDate>Fri, 17 Jun 2011 13:42:11 +0000</pubDate>
		<dc:creator>admin</dc:creator>
		<guid isPermaLink="false">http://blog.ivanjovanovic.com/?p=201</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>201</wp:post_id>
		<wp:post_date>2011-06-17 13:42:11</wp:post_date>
		<wp:post_date_gmt>2011-06-17 13:42:11</wp:post_date_gmt>
		<wp:comment_status>open</wp:comment_status>
		<wp:ping_status>open</wp:ping_status>
		<wp:post_name>dont-let-users-test-your-uis</wp:post_name>
		<wp:status>trash</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>post</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
			<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_status</wp:meta_key>
			<wp:meta_value><![CDATA[draft]]></wp:meta_value>
		</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_trash_meta_time</wp:meta_key>
			<wp:meta_value><![CDATA[1314733834]]></wp:meta_value>
		</wp:postmeta>
	</item>
</channel>
</rss>
